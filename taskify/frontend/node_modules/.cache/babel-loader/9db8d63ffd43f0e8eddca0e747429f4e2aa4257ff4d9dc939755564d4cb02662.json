{"ast":null,"code":"\n\n// // import React, { useState } from 'react';\n// // import axios from 'axios'; // Add this import statement\n// // import './task.css';\n\n// // const Task = ({ task, onDelete, onToggleImportant, onToggleCompletion }) => {\n// //   const [isEditing, setIsEditing] = useState(false);\n// //   const [editedTitle, setEditedTitle] = useState(task.title);\n// //   const [editedDescription, setEditedDescription] = useState(task.description);\n\n// //   const handleSaveEdit = async () => {\n// //     try {\n// //       const userId = localStorage.getItem('id');\n// //       await axios.put(`/api/update-task/${task._id}`, {\n// //         title: editedTitle,\n// //         description: editedDescription\n// //       }, {\n// //         headers: { id: userId }\n// //       });\n// //       setIsEditing(false);\n// //     } catch (error) {\n// //       console.error('Error saving task edit:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"task\">\n// //       <div className=\"task-content\">\n// //         {isEditing ? (\n// //           <>\n// //             <input\n// //               type=\"text\"\n// //               value={editedTitle}\n// //               onChange={(e) => setEditedTitle(e.target.value)}\n// //             />\n// //             <textarea\n// //               value={editedDescription}\n// //               onChange={(e) => setEditedDescription(e.target.value)}\n// //             ></textarea>\n// //             <button onClick={handleSaveEdit}>Save</button>\n// //           </>\n// //         ) : (\n// //           <>\n// //             <h3>{task.title}</h3>\n// //             <p>{task.description}</p>\n// //           </>\n// //         )}\n// //       </div>\n// //       <div className=\"task-buttons\">\n// //         <button onClick={() => onToggleCompletion(task._id)}>\n// //           {task.complete ? <h6>Completed</h6> : <h6>Incomplete</h6>}\n// //         </button>\n// //         <button onClick={() => onToggleImportant(task._id)}>\n// //           {task.important ? <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i> : <i className=\"bi bi-star\"></i>}\n// //         </button>\n// //         <button onClick={() => setIsEditing(prev => !prev)}>\n// //           {isEditing ? 'Cancel' : 'Edit'}\n// //         </button>\n// //         <button onClick={() => onDelete(task._id)}>\n// //           <i className=\"bi bi-trash\"></i>\n// //         </button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Task;\n// import React, {useState} from 'react';\n// import './task.css';\n\n// const Task = ({ task, onMoveToTrash }) => {\n//   const [isToggled, setIsToggled] = useState(false);\n\n//   const handleToggle = () => {\n//     setIsToggled((prev) => !prev);\n//   }\n\n//   const [checked, setIsChecked] = useState(false)\n\n//   const handleCheck =() => {\n//     setIsChecked((prev) => !prev);\n\n//   }\n//   return (\n//     <div className=\"task\">\n//       <div className=\"task-content\">\n//         <h3>{task.title}</h3>\n//         <p>{task.description}</p>\n//       </div>\n//       <div className=\"task-buttons\">\n\n//         <button onClick={handleCheck}>\n//       {checked ? (\n//        <h6 id='co'>Completed </h6>\n\n//       ) : (\n//         <h6 id='inco'>incompleted</h6>\n//       )}</button>\n\n//         <button><i id='icon' className=\"bi bi-pencil\"></i></button>\n//         {/*<button><i id='icon' className=\"bi bi-trash\"></i></button>*/}\n//         <button onClick={() => onMoveToTrash(task.id)}><i id=\"icon\" className=\"bi bi-trash\"></i></button>\n\n//         <button onClick={handleToggle}>\n//       {isToggled ? (\n//        <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i>\n\n//       ) : (\n//         <i id='icon' className=\"bi bi-star\"></i>\n//       )}\n//     </button>  \n//         </div>\n//     </div>\n//   );\n// };\n\n// export default Task;","map":{"version":3,"names":[],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/task.js"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import React, { useState } from 'react';\n// // import axios from 'axios'; // Add this import statement\n// // import './task.css';\n\n// // const Task = ({ task, onDelete, onToggleImportant, onToggleCompletion }) => {\n// //   const [isEditing, setIsEditing] = useState(false);\n// //   const [editedTitle, setEditedTitle] = useState(task.title);\n// //   const [editedDescription, setEditedDescription] = useState(task.description);\n\n// //   const handleSaveEdit = async () => {\n// //     try {\n// //       const userId = localStorage.getItem('id');\n// //       await axios.put(`/api/update-task/${task._id}`, {\n// //         title: editedTitle,\n// //         description: editedDescription\n// //       }, {\n// //         headers: { id: userId }\n// //       });\n// //       setIsEditing(false);\n// //     } catch (error) {\n// //       console.error('Error saving task edit:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"task\">\n// //       <div className=\"task-content\">\n// //         {isEditing ? (\n// //           <>\n// //             <input\n// //               type=\"text\"\n// //               value={editedTitle}\n// //               onChange={(e) => setEditedTitle(e.target.value)}\n// //             />\n// //             <textarea\n// //               value={editedDescription}\n// //               onChange={(e) => setEditedDescription(e.target.value)}\n// //             ></textarea>\n// //             <button onClick={handleSaveEdit}>Save</button>\n// //           </>\n// //         ) : (\n// //           <>\n// //             <h3>{task.title}</h3>\n// //             <p>{task.description}</p>\n// //           </>\n// //         )}\n// //       </div>\n// //       <div className=\"task-buttons\">\n// //         <button onClick={() => onToggleCompletion(task._id)}>\n// //           {task.complete ? <h6>Completed</h6> : <h6>Incomplete</h6>}\n// //         </button>\n// //         <button onClick={() => onToggleImportant(task._id)}>\n// //           {task.important ? <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i> : <i className=\"bi bi-star\"></i>}\n// //         </button>\n// //         <button onClick={() => setIsEditing(prev => !prev)}>\n// //           {isEditing ? 'Cancel' : 'Edit'}\n// //         </button>\n// //         <button onClick={() => onDelete(task._id)}>\n// //           <i className=\"bi bi-trash\"></i>\n// //         </button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Task;\n// import React, {useState} from 'react';\n// import './task.css';\n\n// const Task = ({ task, onMoveToTrash }) => {\n//   const [isToggled, setIsToggled] = useState(false);\n\n//   const handleToggle = () => {\n//     setIsToggled((prev) => !prev);\n//   }\n\n//   const [checked, setIsChecked] = useState(false)\n\n//   const handleCheck =() => {\n//     setIsChecked((prev) => !prev);\n\n//   }\n//   return (\n//     <div className=\"task\">\n//       <div className=\"task-content\">\n//         <h3>{task.title}</h3>\n//         <p>{task.description}</p>\n//       </div>\n//       <div className=\"task-buttons\">\n       \n//         <button onClick={handleCheck}>\n//       {checked ? (\n//        <h6 id='co'>Completed </h6>\n\n//       ) : (\n//         <h6 id='inco'>incompleted</h6>\n//       )}</button>\n\n        \n//         <button><i id='icon' className=\"bi bi-pencil\"></i></button>\n//         {/*<button><i id='icon' className=\"bi bi-trash\"></i></button>*/}\n//         <button onClick={() => onMoveToTrash(task.id)}><i id=\"icon\" className=\"bi bi-trash\"></i></button>\n\n\n//         <button onClick={handleToggle}>\n//       {isToggled ? (\n//        <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i>\n\n//       ) : (\n//         <i id='icon' className=\"bi bi-star\"></i>\n//       )}\n//     </button>  \n//         </div>\n//     </div>\n//   );\n// };\n\n// export default Task;\n"],"mappings":";;AA0CA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}