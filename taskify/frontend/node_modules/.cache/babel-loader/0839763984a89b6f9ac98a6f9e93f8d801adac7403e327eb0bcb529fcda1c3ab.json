{"ast":null,"code":"var _jsxFileName = \"/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/inputData.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/inputData.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputData = ({\n  isOpen,\n  onClose,\n  onSubmit\n}) => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = async () => {\n    if (title && description) {\n      try {\n        const userId = localStorage.getItem('id');\n        const token = localStorage.getItem('token');\n        const response = await fetch('http://localhost:4000/api/v2/create-task', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n            'id': userId\n          },\n          body: JSON.stringify({\n            title,\n            desc: description\n          })\n        });\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error('Server Response:', errorText);\n          throw new Error(`Failed to save the task: ${errorText}`);\n        }\n        let data;\n        try {\n          data = await response.json();\n        } catch (jsonError) {\n          console.error('Failed to parse JSON:', jsonError);\n          throw new Error('Failed to parse server response');\n        }\n        onSubmit(data.task);\n        setTitle('');\n        setDescription('');\n        onClose();\n      } catch (error) {\n        console.error('Error saving task:', error);\n        alert(`Failed to save the task: ${error.message}`);\n      }\n    } else {\n      alert('Please fill in all fields');\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-button\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        id: \"newTask\",\n        children: \"Add a New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        className: \"modal-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        className: \"modal-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(InputData, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = InputData;\nexport default InputData;\nvar _c;\n$RefreshReg$(_c, \"InputData\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InputData","isOpen","onClose","onSubmit","_s","title","setTitle","description","setDescription","handleSubmit","userId","localStorage","getItem","token","response","fetch","method","headers","body","JSON","stringify","desc","ok","errorText","text","console","error","Error","data","json","jsonError","task","alert","message","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/inputData.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles/inputData.css';\n\nconst InputData = ({ isOpen, onClose, onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  const handleSubmit = async () => {\n    if (title && description) {\n      try {\n        const userId = localStorage.getItem('id');\n        const token = localStorage.getItem('token');\n\n        const response = await fetch('http://localhost:4000/api/v2/create-task', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n            'id': userId,\n          },\n          body: JSON.stringify({ title, desc: description }),\n        });\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error('Server Response:', errorText);\n          throw new Error(`Failed to save the task: ${errorText}`);\n        }\n\n        let data;\n        try {\n          data = await response.json();\n        } catch (jsonError) {\n          console.error('Failed to parse JSON:', jsonError);\n          throw new Error('Failed to parse server response');\n        }\n\n        onSubmit(data.task); \n        setTitle('');\n        setDescription('');\n        onClose();\n      } catch (error) {\n        console.error('Error saving task:', error);\n        alert(`Failed to save the task: ${error.message}`);\n      }\n    } else {\n      alert('Please fill in all fields');\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button className=\"close-button\" onClick={onClose}>\n          &times;\n        </button>\n        <h2 id='newTask'>Add a New Task</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n          className=\"modal-input\"\n        />\n        <textarea\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          className=\"modal-textarea\"\n        ></textarea>\n        <button className=\"submit-button\" onClick={handleSubmit}>\n          Submit\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default InputData;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}