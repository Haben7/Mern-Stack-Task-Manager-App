{"ast":null,"code":"var _jsxFileName = \"/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/ForgotPassword.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const ForgotPassword = () => {\n//   const [email, setEmail] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleClose = () => {\n//     navigate('/signIn');\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(''); // Clear previous errors\n\n//     try {\n//       const res = await fetch('/api/auth/forgot-password', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email }),\n//       });\n\n//       // Log the raw response for debugging\n//       const textResponse = await res.text();\n//       console.log('Response Text:', textResponse);\n\n//       if (!res.ok) {\n//         // If the response status is not OK, handle it as an error\n//         throw new Error(textResponse);\n//       }\n\n//       const data = JSON.parse(textResponse); // Parse response as JSON\n//       alert(data.message);\n//       handleClose(); // Close the modal after submission\n//     } catch (err) {\n//       console.error('Error:', err.message);\n//       setError('Something went wrong. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal-content\">\n//         <button className=\"close-button\" onClick={handleClose}>\n//           &times;\n//         </button>\n//         <h2 id=\"newTask\">Forgot Password</h2>\n//         <form onSubmit={handleSubmit}>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             placeholder=\"Enter your email\"\n//             required\n//             className=\"modal-input\"\n//           />\n//           <button className=\"submit-button\" type=\"submit\">\n//             Reset Password\n//           </button>\n//         </form>\n//         {error && <p className=\"error-message\">{error}</p>} {/* Display error message */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ForgotPassword;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [step, setStep] = useState(1); // 1: Email, 2: Code Verification\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Handle email submission for password reset\n  const handleEmailSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const res = await fetch('/api/auth/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email\n        })\n      });\n      if (!res.ok) {\n        throw new Error('Failed to send verification code');\n      }\n      alert('Verification code sent to your email.');\n      setStep(2); // Move to the next step\n    } catch (err) {\n      setError('Something went wrong. Please try again.');\n    }\n  };\n\n  // Handle verification code submission\n  const handleCodeSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    try {\n      const res = await fetch('/api/auth/verify-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          code\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) {\n        throw new Error(data.message);\n      }\n      alert('Code verified. You are now logged in.');\n      localStorage.setItem('token', data.token); // Save the token locally\n      navigate('/'); // Redirect to the home page\n    } catch (err) {\n      setError('Invalid verification code. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: step === 1 ?\n    /*#__PURE__*/\n    // Step 1: Email Input\n    _jsxDEV(\"form\", {\n      onSubmit: handleEmailSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        placeholder: \"Enter your email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Verification Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Step 2: Code Verification\n    _jsxDEV(\"form\", {\n      onSubmit: handleCodeSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter Verification Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: code,\n        onChange: e => setCode(e.target.value),\n        placeholder: \"Enter the code\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verify Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"BBjGtqsKH8JPOpodIY0oflyhMfY=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ForgotPassword","_s","email","setEmail","code","setCode","step","setStep","error","setError","navigate","handleEmailSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","ok","Error","alert","err","handleCodeSubmit","data","json","message","localStorage","setItem","token","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/ForgotPassword.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const ForgotPassword = () => {\n//   const [email, setEmail] = useState('');\n//   const [error, setError] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleClose = () => {\n//     navigate('/signIn');\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setError(''); // Clear previous errors\n\n//     try {\n//       const res = await fetch('/api/auth/forgot-password', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email }),\n//       });\n\n//       // Log the raw response for debugging\n//       const textResponse = await res.text();\n//       console.log('Response Text:', textResponse);\n\n//       if (!res.ok) {\n//         // If the response status is not OK, handle it as an error\n//         throw new Error(textResponse);\n//       }\n\n//       const data = JSON.parse(textResponse); // Parse response as JSON\n//       alert(data.message);\n//       handleClose(); // Close the modal after submission\n//     } catch (err) {\n//       console.error('Error:', err.message);\n//       setError('Something went wrong. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal-content\">\n//         <button className=\"close-button\" onClick={handleClose}>\n//           &times;\n//         </button>\n//         <h2 id=\"newTask\">Forgot Password</h2>\n//         <form onSubmit={handleSubmit}>\n//           <input\n//             type=\"email\"\n//             value={email}\n//             onChange={(e) => setEmail(e.target.value)}\n//             placeholder=\"Enter your email\"\n//             required\n//             className=\"modal-input\"\n//           />\n//           <button className=\"submit-button\" type=\"submit\">\n//             Reset Password\n//           </button>\n//         </form>\n//         {error && <p className=\"error-message\">{error}</p>} {/* Display error message */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default ForgotPassword;\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst ForgotPassword = () => {\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [step, setStep] = useState(1); // 1: Email, 2: Code Verification\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // Handle email submission for password reset\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const res = await fetch('/api/auth/forgot-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      if (!res.ok) {\n        throw new Error('Failed to send verification code');\n      }\n\n      alert('Verification code sent to your email.');\n      setStep(2); // Move to the next step\n    } catch (err) {\n      setError('Something went wrong. Please try again.');\n    }\n  };\n\n  // Handle verification code submission\n  const handleCodeSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n\n    try {\n      const res = await fetch('/api/auth/verify-code', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, code }),\n      });\n\n      const data = await res.json();\n      if (!res.ok) {\n        throw new Error(data.message);\n      }\n\n      alert('Code verified. You are now logged in.');\n      localStorage.setItem('token', data.token); // Save the token locally\n      navigate('/'); // Redirect to the home page\n    } catch (err) {\n      setError('Invalid verification code. Please try again.');\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      {step === 1 ? (\n        // Step 1: Email Input\n        <form onSubmit={handleEmailSubmit}>\n          <h2>Forgot Password</h2>\n          <input\n            type=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"Enter your email\"\n            required\n          />\n          <button type=\"submit\">Send Verification Code</button>\n          {error && <p className=\"error-message\">{error}</p>}\n        </form>\n      ) : (\n        // Step 2: Code Verification\n        <form onSubmit={handleCodeSubmit}>\n          <h2>Enter Verification Code</h2>\n          <input\n            type=\"text\"\n            value={code}\n            onChange={(e) => setCode(e.target.value)}\n            placeholder=\"Enter the code\"\n            required\n          />\n          <button type=\"submit\">Verify Code</button>\n          {error && <p className=\"error-message\">{error}</p>}\n        </form>\n      )}\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}