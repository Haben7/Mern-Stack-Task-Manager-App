{"ast":null,"code":"// import React, { useState } from 'react';\n// import Task from './task';\n// import InputData from './inputData';\n// import './tasklist.css';\n// const TaskList = () => {\n//   const [tasks, setTasks] = useState([\n//     { id: 1, title: 'test 1', description: ' laboris nisi ut aliquip ex ea commodo consequat. Duis aute irur laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate ', status: 'incompleted' },\n//     { id: 2, title: 'Build penny juice app', description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n//     { id: 3, title: 'Learn Python', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim ', status: 'incompleted' },\n//     { id: 4, title: 'Learn React', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim v', status: 'incompleted' },\n//     { id: 5, title: 'Build a Portfolio', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim a ullamco', status: 'incompleted' },\n//       { id: 6, title: 'Learn Nodejs', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n//   ]);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n//   const handleAddTask = (newTask) => {\n//     setTasks([...tasks, { ...newTask, id: tasks.length + 1, status: 'incompleted' }]);\n//   };\n//   const moveToTrash = (taskId) => {\n//     setTasks(tasks.map(task =>\n//       task.id === taskId ? { ...task, trashed: true } : task\n//     ));\n//   };\n//   const filteredTasks = tasks.filter(task => !task.trashed);\n//   return (\n//         <div className=\"task-list\">\n//         {filteredTasks.map(task => (\n//           <Task key={task.id} task={task} onMoveToTrash={moveToTrash} />\n//         ))}\n//        <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n//         <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n//         <p id=\"p\">Add Task</p>\n//       </button>\n//       <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n//     </div>\n//   );\n// };\n// export default TaskList;\nimport React,{useState,useEffect}from'react';import Task from'./task';import InputData from'./inputData';import'./tasklist.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskList=()=>{const[tasks,setTasks]=useState([]);const[isModalOpen,setIsModalOpen]=useState(false);useEffect(()=>{fetchTasks();},[]);const fetchTasks=async()=>{try{const userId=localStorage.getItem('id');const token=localStorage.getItem('token');const response=await fetch('http://localhost:4000/api/v2/get-all-tasks',{method:'GET',headers:{'Authorization':`Bearer ${token}`,'id':userId}});if(response.ok){const data=await response.json();setTasks(data.data);}else{console.error('Failed to fetch tasks');}}catch(error){console.error('Error fetching tasks:',error);}};const handleAddTask=newTask=>{setTasks([...tasks,newTask]);};const handleDeleteTask=async taskId=>{try{const userId=localStorage.getItem('id');const token=localStorage.getItem('token');const response=await fetch(`http://localhost:4000/api/v2/delete-task/${taskId}`,{method:'DELETE',headers:{'Authorization':`Bearer ${token}`,'id':userId}});if(response.ok){setTasks(tasks.filter(task=>task._id!==taskId));}else{console.error('Failed to delete task');}}catch(error){console.error('Error deleting task:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"task-list\",children:[tasks.map(task=>/*#__PURE__*/_jsx(Task,{task:task,onDelete:handleDeleteTask},task._id)),/*#__PURE__*/_jsxs(\"button\",{id:\"add\",className:\"task-list\",onClick:()=>setIsModalOpen(true),children:[/*#__PURE__*/_jsx(\"i\",{id:\"more\",className:\"bi bi-plus-circle\"}),/*#__PURE__*/_jsx(\"p\",{id:\"p\",children:\"Add Task\"})]}),/*#__PURE__*/_jsx(InputData,{isOpen:isModalOpen,onClose:()=>setIsModalOpen(false),onSubmit:handleAddTask})]});};export default TaskList;","map":{"version":3,"names":["React","useState","useEffect","Task","InputData","jsx","_jsx","jsxs","_jsxs","TaskList","tasks","setTasks","isModalOpen","setIsModalOpen","fetchTasks","userId","localStorage","getItem","token","response","fetch","method","headers","ok","data","json","console","error","handleAddTask","newTask","handleDeleteTask","taskId","filter","task","_id","className","children","map","onDelete","id","onClick","isOpen","onClose","onSubmit"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/taskList.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import Task from './task';\n// import InputData from './inputData';\n// import './tasklist.css';\n\n\n// const TaskList = () => {\n//   const [tasks, setTasks] = useState([\n//     { id: 1, title: 'test 1', description: ' laboris nisi ut aliquip ex ea commodo consequat. Duis aute irur laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate ', status: 'incompleted' },\n//     { id: 2, title: 'Build penny juice app', description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n//     { id: 3, title: 'Learn Python', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim ', status: 'incompleted' },\n//     { id: 4, title: 'Learn React', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim v', status: 'incompleted' },\n//     { id: 5, title: 'Build a Portfolio', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim a ullamco', status: 'incompleted' },\n//       { id: 6, title: 'Learn Nodejs', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n      \n//   ]);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const handleAddTask = (newTask) => {\n//     setTasks([...tasks, { ...newTask, id: tasks.length + 1, status: 'incompleted' }]);\n//   };\n\n//   const moveToTrash = (taskId) => {\n//     setTasks(tasks.map(task =>\n//       task.id === taskId ? { ...task, trashed: true } : task\n//     ));\n//   };\n\n//   const filteredTasks = tasks.filter(task => !task.trashed);\n//   return (\n//         <div className=\"task-list\">\n//         {filteredTasks.map(task => (\n//           <Task key={task.id} task={task} onMoveToTrash={moveToTrash} />\n//         ))}\n//        <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n//         <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n//         <p id=\"p\">Add Task</p>\n//       </button>\n//       <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n//     </div>\n//   );\n// };\n\n// export default TaskList;\nimport React, { useState, useEffect } from 'react';\nimport Task from './task';\nimport InputData from './inputData';\nimport './tasklist.css';\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  const fetchTasks = async () => {\n    try {\n      const userId = localStorage.getItem('id');\n      const token = localStorage.getItem('token');\n\n      const response = await fetch('http://localhost:4000/api/v2/get-all-tasks', {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'id': userId,\n        },\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        setTasks(data.data);\n      } else {\n        console.error('Failed to fetch tasks');\n      }\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  const handleAddTask = (newTask) => {\n    setTasks([...tasks, newTask]);\n  };\n\n  const handleDeleteTask = async (taskId) => {\n    try {\n      const userId = localStorage.getItem('id');\n      const token = localStorage.getItem('token');\n\n      const response = await fetch(`http://localhost:4000/api/v2/delete-task/${taskId}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'id': userId,\n        },\n      });\n\n      if (response.ok) {\n        setTasks(tasks.filter(task => task._id !== taskId));\n      } else {\n        console.error('Failed to delete task');\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n\n  return (\n    <div className=\"task-list\">\n      {tasks.map(task => (\n        <Task key={task._id} task={task} onDelete={handleDeleteTask} />\n      ))}\n      <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n        <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n        <p id=\"p\">Add Task</p>\n      </button>\n      <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}