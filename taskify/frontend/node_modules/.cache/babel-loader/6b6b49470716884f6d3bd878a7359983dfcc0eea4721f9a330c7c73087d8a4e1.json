{"ast":null,"code":"var _jsxFileName = \"/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/task.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import axios from 'axios'; // Add this import statement\n// // import './task.css';\n\n// // const Task = ({ task, onDelete, onToggleImportant, onToggleCompletion }) => {\n// //   const [isEditing, setIsEditing] = useState(false);\n// //   const [editedTitle, setEditedTitle] = useState(task.title);\n// //   const [editedDescription, setEditedDescription] = useState(task.description);\n\n// //   const handleSaveEdit = async () => {\n// //     try {\n// //       const userId = localStorage.getItem('id');\n// //       await axios.put(`/api/update-task/${task._id}`, {\n// //         title: editedTitle,\n// //         description: editedDescription\n// //       }, {\n// //         headers: { id: userId }\n// //       });\n// //       setIsEditing(false);\n// //     } catch (error) {\n// //       console.error('Error saving task edit:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"task\">\n// //       <div className=\"task-content\">\n// //         {isEditing ? (\n// //           <>\n// //             <input\n// //               type=\"text\"\n// //               value={editedTitle}\n// //               onChange={(e) => setEditedTitle(e.target.value)}\n// //             />\n// //             <textarea\n// //               value={editedDescription}\n// //               onChange={(e) => setEditedDescription(e.target.value)}\n// //             ></textarea>\n// //             <button onClick={handleSaveEdit}>Save</button>\n// //           </>\n// //         ) : (\n// //           <>\n// //             <h3>{task.title}</h3>\n// //             <p>{task.description}</p>\n// //           </>\n// //         )}\n// //       </div>\n// //       <div className=\"task-buttons\">\n// //         <button onClick={() => onToggleCompletion(task._id)}>\n// //           {task.complete ? <h6>Completed</h6> : <h6>Incomplete</h6>}\n// //         </button>\n// //         <button onClick={() => onToggleImportant(task._id)}>\n// //           {task.important ? <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i> : <i className=\"bi bi-star\"></i>}\n// //         </button>\n// //         <button onClick={() => setIsEditing(prev => !prev)}>\n// //           {isEditing ? 'Cancel' : 'Edit'}\n// //         </button>\n// //         <button onClick={() => onDelete(task._id)}>\n// //           <i className=\"bi bi-trash\"></i>\n// //         </button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Task;\n// import React, {useState} from 'react';\n// import './task.css';\n\n// const Task = ({ task, onMoveToTrash }) => {\n//   const [isToggled, setIsToggled] = useState(false);\n\n//   const handleToggle = () => {\n//     setIsToggled((prev) => !prev);\n//   }\n\n//   const [checked, setIsChecked] = useState(false)\n\n//   const handleCheck =() => {\n//     setIsChecked((prev) => !prev);\n\n//   }\n//   return (\n//     <div className=\"task\">\n//       <div className=\"task-content\">\n//         <h3>{task.title}</h3>\n//         <p>{task.description}</p>\n//       </div>\n//       <div className=\"task-buttons\">\n\n//         <button onClick={handleCheck}>\n//       {checked ? (\n//        <h6 id='co'>Completed </h6>\n\n//       ) : (\n//         <h6 id='inco'>incompleted</h6>\n//       )}</button>\n\n//         <button><i id='icon' className=\"bi bi-pencil\"></i></button>\n//         {/*<button><i id='icon' className=\"bi bi-trash\"></i></button>*/}\n//         <button onClick={() => onMoveToTrash(task.id)}><i id=\"icon\" className=\"bi bi-trash\"></i></button>\n\n//         <button onClick={handleToggle}>\n//       {isToggled ? (\n//        <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i>\n\n//       ) : (\n//         <i id='icon' className=\"bi bi-star\"></i>\n//       )}\n//     </button>  \n//         </div>\n//     </div>\n//   );\n// };\n\n// export default Task;\nimport React, { useState } from 'react';\nimport './task.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  task,\n  onMoveToTrash\n}) => {\n  _s();\n  const [isToggled, setIsToggled] = useState(task.important || false);\n  const [checked, setIsChecked] = useState(task.complete || false);\n  const handleToggle = () => {\n    setIsToggled(prev => !prev);\n  };\n  const handleCheck = () => {\n    setIsChecked(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: task.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCheck,\n        children: checked ? /*#__PURE__*/_jsxDEV(\"h6\", {\n          id: \"co\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"h6\", {\n          id: \"inco\",\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"icon\",\n          className: \"bi bi-pencil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onMoveToTrash(task.id),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"icon\",\n          className: \"bi bi-trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggle,\n        children: isToggled ? /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bi bi-star-fill\",\n          style: {\n            color: 'yellow'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          id: \"icon\",\n          className: \"bi bi-star\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"cltSznulTVQsxCqTHcHl8YfQv6k=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Task","task","onMoveToTrash","_s","isToggled","setIsToggled","important","checked","setIsChecked","complete","handleToggle","prev","handleCheck","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","description","onClick","id","style","color","_c","$RefreshReg$"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/task.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import axios from 'axios'; // Add this import statement\n// // import './task.css';\n\n// // const Task = ({ task, onDelete, onToggleImportant, onToggleCompletion }) => {\n// //   const [isEditing, setIsEditing] = useState(false);\n// //   const [editedTitle, setEditedTitle] = useState(task.title);\n// //   const [editedDescription, setEditedDescription] = useState(task.description);\n\n// //   const handleSaveEdit = async () => {\n// //     try {\n// //       const userId = localStorage.getItem('id');\n// //       await axios.put(`/api/update-task/${task._id}`, {\n// //         title: editedTitle,\n// //         description: editedDescription\n// //       }, {\n// //         headers: { id: userId }\n// //       });\n// //       setIsEditing(false);\n// //     } catch (error) {\n// //       console.error('Error saving task edit:', error);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"task\">\n// //       <div className=\"task-content\">\n// //         {isEditing ? (\n// //           <>\n// //             <input\n// //               type=\"text\"\n// //               value={editedTitle}\n// //               onChange={(e) => setEditedTitle(e.target.value)}\n// //             />\n// //             <textarea\n// //               value={editedDescription}\n// //               onChange={(e) => setEditedDescription(e.target.value)}\n// //             ></textarea>\n// //             <button onClick={handleSaveEdit}>Save</button>\n// //           </>\n// //         ) : (\n// //           <>\n// //             <h3>{task.title}</h3>\n// //             <p>{task.description}</p>\n// //           </>\n// //         )}\n// //       </div>\n// //       <div className=\"task-buttons\">\n// //         <button onClick={() => onToggleCompletion(task._id)}>\n// //           {task.complete ? <h6>Completed</h6> : <h6>Incomplete</h6>}\n// //         </button>\n// //         <button onClick={() => onToggleImportant(task._id)}>\n// //           {task.important ? <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i> : <i className=\"bi bi-star\"></i>}\n// //         </button>\n// //         <button onClick={() => setIsEditing(prev => !prev)}>\n// //           {isEditing ? 'Cancel' : 'Edit'}\n// //         </button>\n// //         <button onClick={() => onDelete(task._id)}>\n// //           <i className=\"bi bi-trash\"></i>\n// //         </button>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Task;\n// import React, {useState} from 'react';\n// import './task.css';\n\n// const Task = ({ task, onMoveToTrash }) => {\n//   const [isToggled, setIsToggled] = useState(false);\n\n//   const handleToggle = () => {\n//     setIsToggled((prev) => !prev);\n//   }\n\n//   const [checked, setIsChecked] = useState(false)\n\n//   const handleCheck =() => {\n//     setIsChecked((prev) => !prev);\n\n//   }\n//   return (\n//     <div className=\"task\">\n//       <div className=\"task-content\">\n//         <h3>{task.title}</h3>\n//         <p>{task.description}</p>\n//       </div>\n//       <div className=\"task-buttons\">\n       \n//         <button onClick={handleCheck}>\n//       {checked ? (\n//        <h6 id='co'>Completed </h6>\n\n//       ) : (\n//         <h6 id='inco'>incompleted</h6>\n//       )}</button>\n\n        \n//         <button><i id='icon' className=\"bi bi-pencil\"></i></button>\n//         {/*<button><i id='icon' className=\"bi bi-trash\"></i></button>*/}\n//         <button onClick={() => onMoveToTrash(task.id)}><i id=\"icon\" className=\"bi bi-trash\"></i></button>\n\n\n//         <button onClick={handleToggle}>\n//       {isToggled ? (\n//        <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i>\n\n//       ) : (\n//         <i id='icon' className=\"bi bi-star\"></i>\n//       )}\n//     </button>  \n//         </div>\n//     </div>\n//   );\n// };\n\n// export default Task;\nimport React, { useState } from 'react';\nimport './task.css';\n\nconst Task = ({ task, onMoveToTrash }) => {\n  const [isToggled, setIsToggled] = useState(task.important || false);\n  const [checked, setIsChecked] = useState(task.complete || false);\n\n  const handleToggle = () => {\n    setIsToggled(prev => !prev);\n  }\n\n  const handleCheck = () => {\n    setIsChecked(prev => !prev);\n  }\n\n  return (\n    <div className=\"task\">\n      <div className=\"task-content\">\n        <h3>{task.title}</h3>\n        <p>{task.description}</p>\n      </div>\n      <div className=\"task-buttons\">\n        <button onClick={handleCheck}>\n          {checked ? (\n            <h6 id='co'>Completed</h6>\n          ) : (\n            <h6 id='inco'>Incomplete</h6>\n          )}\n        </button>\n        <button>\n          <i id='icon' className=\"bi bi-pencil\"></i>\n        </button>\n        <button onClick={() => onMoveToTrash(task.id)}>\n          <i id=\"icon\" className=\"bi bi-trash\"></i>\n        </button>\n        <button onClick={handleToggle}>\n          {isToggled ? (\n            <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i>\n          ) : (\n            <i id='icon' className=\"bi bi-star\"></i>\n          )}\n        </button>  \n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}