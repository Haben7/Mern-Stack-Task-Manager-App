{"ast":null,"code":"var _jsxFileName = \"/home/netsi/frontend/taskify/src/components/taskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Task from './task';\nimport './tasklist.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    title: 'test 1',\n    description: 'test 1 demo',\n    status: 'incompleted'\n  }, {\n    id: 2,\n    title: 'The Best Coding Channel',\n    description: 'I have to create my channel...',\n    status: 'completed'\n  }, {\n    id: 3,\n    title: 'CPP concepts',\n    description: 'I need to clear basics of Cpp...',\n    status: 'incompleted'\n  }, {\n    id: 4,\n    title: 'Learn React',\n    description: 'Finish the React course',\n    status: 'incompleted'\n  }, {\n    id: 5,\n    title: 'Build a Portfolio',\n    description: 'Create my portfolio website',\n    status: 'completed'\n  }, {\n    id: 3,\n    title: 'CPP concepts',\n    description: 'I need to clear basics of Cpp...',\n    status: 'incompleted'\n  }, {\n    id: 1,\n    title: 'test 1',\n    description: 'test 1 demo',\n    status: 'incompleted'\n  }, {\n    id: 2,\n    title: 'The Best Coding Channel',\n    description: 'I have to create my channel...',\n    status: 'completed'\n  }, {\n    id: 3,\n    title: 'CPP concepts',\n    description: 'I need to clear basics of Cpp...',\n    status: 'incompleted'\n  }, {\n    id: 4,\n    title: 'Learn React',\n    description: 'Finish the React course',\n    status: 'incompleted'\n  }, {\n    id: 5,\n    title: 'Build a Portfolio',\n    description: 'Create my portfolio website',\n    status: 'completed'\n  }, {\n    id: 3,\n    title: 'CPP concepts',\n    description: 'I need to clear basics of Cpp...',\n    status: 'incompleted'\n  }, {\n    id: 1,\n    title: 'test 1',\n    description: 'test 1 demo',\n    status: 'incompleted'\n  }, {\n    id: 2,\n    title: 'The Best Coding Channel',\n    description: 'I have to create my channel...',\n    status: 'completed'\n  }, {\n    id: 3,\n    title: 'CPP concepts',\n    description: 'I need to clear basics of Cpp...',\n    status: 'incompleted'\n  }, {\n    id: 4,\n    title: 'Learn React',\n    description: 'Finish the React course',\n    status: 'incompleted'\n  }, {\n    id: 5,\n    title: 'Build a Portfolio',\n    description: 'Create my portfolio website',\n    status: 'completed'\n  }, {\n    id: 3,\n    title: 'CPP concepts',\n    description: 'I need to clear basics of Cpp...',\n    status: 'incompleted'\n  }]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-task\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"IBArpnQiaLjn/WZ398VzckC80ss=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","Task","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","id","title","description","status","className","children","map","task","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/netsi/frontend/taskify/src/components/taskList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Task from './task';\nimport './tasklist.css';\n\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([\n    { id: 1, title: 'test 1', description: 'test 1 demo', status: 'incompleted' },\n    { id: 2, title: 'The Best Coding Channel', description: 'I have to create my channel...', status: 'completed' },\n    { id: 3, title: 'CPP concepts', description: 'I need to clear basics of Cpp...', status: 'incompleted' },\n    { id: 4, title: 'Learn React', description: 'Finish the React course', status: 'incompleted' },\n    { id: 5, title: 'Build a Portfolio', description: 'Create my portfolio website', status: 'completed' },\n      { id: 3, title: 'CPP concepts', description: 'I need to clear basics of Cpp...', status: 'incompleted' },\n      { id: 1, title: 'test 1', description: 'test 1 demo', status: 'incompleted' },\n      { id: 2, title: 'The Best Coding Channel', description: 'I have to create my channel...', status: 'completed' },\n      { id: 3, title: 'CPP concepts', description: 'I need to clear basics of Cpp...', status: 'incompleted' },\n      { id: 4, title: 'Learn React', description: 'Finish the React course', status: 'incompleted' },\n      { id: 5, title: 'Build a Portfolio', description: 'Create my portfolio website', status: 'completed' },\n        { id: 3, title: 'CPP concepts', description: 'I need to clear basics of Cpp...', status: 'incompleted' },\n        { id: 1, title: 'test 1', description: 'test 1 demo', status: 'incompleted' },\n        { id: 2, title: 'The Best Coding Channel', description: 'I have to create my channel...', status: 'completed' },\n        { id: 3, title: 'CPP concepts', description: 'I need to clear basics of Cpp...', status: 'incompleted' },\n        { id: 4, title: 'Learn React', description: 'Finish the React course', status: 'incompleted' },\n        { id: 5, title: 'Build a Portfolio', description: 'Create my portfolio website', status: 'completed' },\n          { id: 3, title: 'CPP concepts', description: 'I need to clear basics of Cpp...', status: 'incompleted' },\n    \n  ]);\n\n  return (\n    <div className=\"task-list\">\n      {tasks.map(task => (\n        <Task key={task.id} task={task} />\n      ))}\n      <div className=\"add-task\">\n        <button>Add Task</button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}