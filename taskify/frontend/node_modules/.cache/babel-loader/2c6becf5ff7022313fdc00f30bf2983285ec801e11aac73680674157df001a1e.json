{"ast":null,"code":"var _jsxFileName = \"/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/important.js\";\nimport React from \"react\";\nimport Header from \"./header\";\nimport Sidebar from \"./sidebar\";\nimport TaskList from \"./taskList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Important() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n_c = Important;\nexport default Important;\n\n// import React, { useState, useEffect } from 'react';\n// import Header from \"./header\";\n// import Sidebar from \"./sidebar\";\n// import Task from './task';\n\n// const Important = () => {\n//   const [tasks, setTasks] = useState([]);\n// const [isModalOpen, setIsModalOpen] = useState(false);\n\n// useEffect(() => {\n//   fetchTasks();\n// }, []);\n\n// const fetchTasks = async () => {\n//   try {\n//     const userId = localStorage.getItem('id');\n//     const token = localStorage.getItem('token');\n\n//     const response = await fetch('http://localhost:4000/api/v2/get-all-tasks', {\n//       method: 'GET',\n//       headers: {\n//         'Authorization': `Bearer ${token}`,\n//         'id': userId,\n//       },\n//     });\n\n//     if (response.ok) {\n//       const data = await response.json();\n//       setTasks(data.data);\n//     } else {\n//       console.error('Failed to fetch tasks');\n//     }\n//   } catch (error) {\n//     console.error('Error fetching tasks:', error);\n//   }\n// };\n\n// const handleAddTask = (newTask) => {\n//   setTasks([...tasks, newTask]);\n// };\n\n// const handleDeleteTask = async (taskId) => {\n//   try {\n//     const userId = localStorage.getItem('id');\n//     const token = localStorage.getItem('token');\n\n//     const response = await fetch(`http://localhost:4000/api/v2/delete-task/${taskId}`, {\n//       method: 'DELETE',\n//       headers: {\n//         'Authorization': `Bearer ${token}`,\n//         'id': userId,\n//       },\n//     });\n\n//     if (response.ok) {\n//       setTasks(tasks.filter(task => task._id !== taskId));\n//     } else {\n//       console.error('Failed to delete task');\n//     }\n//   } catch (error) {\n//     console.error('Error deleting task:', error);\n//   }\n// };\n\n//   return(\n//    <>\n\n//       <Header />\n//      <div className=\"app-body\">\n//             <Sidebar />\n\n//             </div>\n//     </>  \n\n//   );\n// };\n\n// export default Important;\n\n// // // import React from 'react';\n// // // import Task from './task';\n// // // import Header from \"./header\";\n// // // import Sidebar from \"./sidebar\";\n\n// // // const Important = () =>{\n// // //   return (\n// // //     <div>\n\n// // //       <Header />\n// // //      <div className=\"app-body\">\n// // //             <Sidebar />\n// // //             </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default Important;\n\n// // import React, { useEffect, useState } from 'react';\n// // import Task from './task';\n// // import Header from \"./header\";\n// // import Sidebar from \"./sidebar\";\n\n// // const Important = () => {\n// //   const [importantTasks, setImportantTasks] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n\n// //   const fetchImportantTasks = async () => {\n// //     try {\n// //       const token = localStorage.getItem('token');\n\n// //       const response = await fetch('http://localhost:4000/api/v2/tasks/important', {\n// //         method: 'GET',\n// //         headers: {\n// //           'Authorization': `Bearer ${token}`,\n// //         },\n// //       });\n\n// //       if (response.ok) {\n// //         const data = await response.json();\n// //         setImportantTasks(data);\n// //       } else {\n// //         console.error('Failed to fetch important tasks');\n// //       }\n// //     } catch (error) {\n// //       console.error('Error fetching important tasks:', error);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     fetchImportantTasks();\n// //   }, []);\n\n// //   const handleDelete = async (taskId) => {\n// //     try {\n// //       const token = localStorage.getItem('token');\n\n// //       const response = await fetch(`http://localhost:4000/api/v2/delete-task/${taskId}`, {\n// //         method: 'DELETE',\n// //         headers: {\n// //           'Authorization': `Bearer ${token}`,\n// //         },\n// //       });\n\n// //       if (response.ok) {\n// //         setImportantTasks(importantTasks.filter(task => task._id !== taskId));\n// //       } else {\n// //         console.error('Failed to delete task');\n// //       }\n// //     } catch (error) {\n// //       console.error('Error deleting task:', error);\n// //     }\n// //   };\n\n// //   const handleUpdate = () => {\n// //     // Refresh the list of important tasks after an update\n// //     fetchImportantTasks();\n// //   };\n\n// //   if (loading) {\n// //     return <div>Loading...</div>;\n// //   }\n\n// //   return (\n// //     <div>\n// //       <Header />\n// //       <div className=\"app-body\">\n// //         <Sidebar />\n// //         <div className=\"tasks-container\">\n// //           {importantTasks.length > 0 ? (\n// //             importantTasks.map((task) => (\n// //               <Task \n// //                 key={task._id} \n// //                 task={task} \n// //                 onDelete={handleDelete} \n// //                 onUpdate={handleUpdate} // Call handleUpdate to refresh tasks\n// //               />\n// //             ))\n// //           ) : (\n// //             <p>No important tasks found.</p>\n// //           )}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Important;\nvar _c;\n$RefreshReg$(_c, \"Important\");","map":{"version":3,"names":["React","Header","Sidebar","TaskList","jsxDEV","_jsxDEV","Fragment","_Fragment","Important","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/important.js"],"sourcesContent":["import React from \"react\";\nimport Header from \"./header\";\nimport Sidebar from \"./sidebar\";\nimport TaskList from \"./taskList\";\n\nfunction Important(){\n  return(\n    <>\n     <Header />\n     <div className=\"app-body\">\n            <Sidebar />\n            <TaskList />\n          </div>\n    </>\n  )\n}\nexport default Important;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import Header from \"./header\";\n// import Sidebar from \"./sidebar\";\n// import Task from './task';\n\n\n// const Important = () => {\n//   const [tasks, setTasks] = useState([]);\n// const [isModalOpen, setIsModalOpen] = useState(false);\n\n// useEffect(() => {\n//   fetchTasks();\n// }, []);\n\n// const fetchTasks = async () => {\n//   try {\n//     const userId = localStorage.getItem('id');\n//     const token = localStorage.getItem('token');\n\n//     const response = await fetch('http://localhost:4000/api/v2/get-all-tasks', {\n//       method: 'GET',\n//       headers: {\n//         'Authorization': `Bearer ${token}`,\n//         'id': userId,\n//       },\n//     });\n\n//     if (response.ok) {\n//       const data = await response.json();\n//       setTasks(data.data);\n//     } else {\n//       console.error('Failed to fetch tasks');\n//     }\n//   } catch (error) {\n//     console.error('Error fetching tasks:', error);\n//   }\n// };\n\n// const handleAddTask = (newTask) => {\n//   setTasks([...tasks, newTask]);\n// };\n\n// const handleDeleteTask = async (taskId) => {\n//   try {\n//     const userId = localStorage.getItem('id');\n//     const token = localStorage.getItem('token');\n\n//     const response = await fetch(`http://localhost:4000/api/v2/delete-task/${taskId}`, {\n//       method: 'DELETE',\n//       headers: {\n//         'Authorization': `Bearer ${token}`,\n//         'id': userId,\n//       },\n//     });\n\n//     if (response.ok) {\n//       setTasks(tasks.filter(task => task._id !== taskId));\n//     } else {\n//       console.error('Failed to delete task');\n//     }\n//   } catch (error) {\n//     console.error('Error deleting task:', error);\n//   }\n// };\n\n//   return(\n//    <>\n\n//       <Header />\n//      <div className=\"app-body\">\n//             <Sidebar />\n\n//             </div>\n//     </>  \n\n//   );\n// };\n\n// export default Important;\n\n\n// // // import React from 'react';\n// // // import Task from './task';\n// // // import Header from \"./header\";\n// // // import Sidebar from \"./sidebar\";\n\n\n// // // const Important = () =>{\n// // //   return (\n// // //     <div>\n      \n// // //       <Header />\n// // //      <div className=\"app-body\">\n// // //             <Sidebar />\n// // //             </div>\n// // //     </div>\n// // //   );\n// // // };\n\n// // // export default Important;\n\n// // import React, { useEffect, useState } from 'react';\n// // import Task from './task';\n// // import Header from \"./header\";\n// // import Sidebar from \"./sidebar\";\n\n// // const Important = () => {\n// //   const [importantTasks, setImportantTasks] = useState([]);\n// //   const [loading, setLoading] = useState(true);\n\n// //   const fetchImportantTasks = async () => {\n// //     try {\n// //       const token = localStorage.getItem('token');\n\n// //       const response = await fetch('http://localhost:4000/api/v2/tasks/important', {\n// //         method: 'GET',\n// //         headers: {\n// //           'Authorization': `Bearer ${token}`,\n// //         },\n// //       });\n\n// //       if (response.ok) {\n// //         const data = await response.json();\n// //         setImportantTasks(data);\n// //       } else {\n// //         console.error('Failed to fetch important tasks');\n// //       }\n// //     } catch (error) {\n// //       console.error('Error fetching important tasks:', error);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   useEffect(() => {\n// //     fetchImportantTasks();\n// //   }, []);\n\n// //   const handleDelete = async (taskId) => {\n// //     try {\n// //       const token = localStorage.getItem('token');\n\n// //       const response = await fetch(`http://localhost:4000/api/v2/delete-task/${taskId}`, {\n// //         method: 'DELETE',\n// //         headers: {\n// //           'Authorization': `Bearer ${token}`,\n// //         },\n// //       });\n\n// //       if (response.ok) {\n// //         setImportantTasks(importantTasks.filter(task => task._id !== taskId));\n// //       } else {\n// //         console.error('Failed to delete task');\n// //       }\n// //     } catch (error) {\n// //       console.error('Error deleting task:', error);\n// //     }\n// //   };\n\n// //   const handleUpdate = () => {\n// //     // Refresh the list of important tasks after an update\n// //     fetchImportantTasks();\n// //   };\n\n// //   if (loading) {\n// //     return <div>Loading...</div>;\n// //   }\n\n// //   return (\n// //     <div>\n// //       <Header />\n// //       <div className=\"app-body\">\n// //         <Sidebar />\n// //         <div className=\"tasks-container\">\n// //           {importantTasks.length > 0 ? (\n// //             importantTasks.map((task) => (\n// //               <Task \n// //                 key={task._id} \n// //                 task={task} \n// //                 onDelete={handleDelete} \n// //                 onUpdate={handleUpdate} // Call handleUpdate to refresh tasks\n// //               />\n// //             ))\n// //           ) : (\n// //             <p>No important tasks found.</p>\n// //           )}\n// //         </div>\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Important;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,SAASC,SAASA,CAAA,EAAE;EAClB,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACCJ,OAAA,CAACJ,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVR,OAAA;MAAKS,SAAS,EAAC,UAAU;MAAAL,QAAA,gBAClBJ,OAAA,CAACH,OAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXR,OAAA,CAACF,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA,eACV,CAAC;AAEP;AAACE,EAAA,GAVQP,SAAS;AAWlB,eAAeA,SAAS;;AA4CxB;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}