{"ast":null,"code":"var _jsxFileName = \"/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/taskList.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  tasks\n}) => {\n  _s();\n  // Destructure tasks from props\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleAddTask = newTask => {\n    setTasks([...tasks, {\n      ...newTask,\n      id: tasks.length + 1,\n      status: 'incompleted'\n    }]);\n  };\n  const moveToTrash = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      trashed: true\n    } : task));\n  };\n  const filteredTasks = tasks.filter(task => !task.trashed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [filteredTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onMoveToTrash: moveToTrash\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"add\",\n      className: \"task-list\",\n      onClick: () => setIsModalOpen(true),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        id: \"more\",\n        className: \"bi bi-plus-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"p\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputData, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onSubmit: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"mLsII5HRP5G63IA/8vjZ5YHXWr8=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["TaskList","tasks","_s","isModalOpen","setIsModalOpen","useState","handleAddTask","newTask","setTasks","id","length","status","moveToTrash","taskId","map","task","trashed","filteredTasks","filter","_jsxDEV","className","children","Task","onMoveToTrash","fileName","_jsxFileName","lineNumber","columnNumber","onClick","InputData","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/taskList.js"],"sourcesContent":["const TaskList = ({ tasks }) => { // Destructure tasks from props\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleAddTask = (newTask) => {\n    setTasks([...tasks, { ...newTask, id: tasks.length + 1, status: 'incompleted' }]);\n  };\n\n  const moveToTrash = (taskId) => {\n    setTasks(tasks.map(task =>\n      task.id === taskId ? { ...task, trashed: true } : task\n    ));\n  };\n\n  const filteredTasks = tasks.filter(task => !task.trashed);\n\n  return (\n    <div className=\"task-list\">\n      {filteredTasks.map(task => (\n        <Task key={task.id} task={task} onMoveToTrash={moveToTrash} />\n      ))}\n      <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n        <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n        <p id=\"p\">Add Task</p>\n      </button>\n      <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n    </div>\n  );\n};\nexport default TaskList;\n"],"mappings":";;;AAAA,MAAMA,QAAQ,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAAE;EAChC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGC,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMC,aAAa,GAAIC,OAAO,IAAK;IACjCC,QAAQ,CAAC,CAAC,GAAGP,KAAK,EAAE;MAAE,GAAGM,OAAO;MAAEE,EAAE,EAAER,KAAK,CAACS,MAAM,GAAG,CAAC;MAAEC,MAAM,EAAE;IAAc,CAAC,CAAC,CAAC;EACnF,CAAC;EAED,MAAMC,WAAW,GAAIC,MAAM,IAAK;IAC9BL,QAAQ,CAACP,KAAK,CAACa,GAAG,CAACC,IAAI,IACrBA,IAAI,CAACN,EAAE,KAAKI,MAAM,GAAG;MAAE,GAAGE,IAAI;MAAEC,OAAO,EAAE;IAAK,CAAC,GAAGD,IACpD,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,aAAa,GAAGhB,KAAK,CAACiB,MAAM,CAACH,IAAI,IAAI,CAACA,IAAI,CAACC,OAAO,CAAC;EAEzD,oBACEG,OAAA;IAAKC,SAAS,EAAC,WAAW;IAAAC,QAAA,GACvBJ,aAAa,CAACH,GAAG,CAACC,IAAI,iBACrBI,OAAA,CAACG,IAAI;MAAeP,IAAI,EAAEA,IAAK;MAACQ,aAAa,EAAEX;IAAY,GAAhDG,IAAI,CAACN,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA2C,CAC9D,CAAC,eACFR,OAAA;MAAQV,EAAE,EAAC,KAAK;MAACW,SAAS,EAAC,WAAW;MAACQ,OAAO,EAAEA,CAAA,KAAMxB,cAAc,CAAC,IAAI,CAAE;MAAAiB,QAAA,gBACzEF,OAAA;QAAGV,EAAE,EAAC,MAAM;QAACW,SAAS,EAAC;MAAmB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/CR,OAAA;QAAGV,EAAE,EAAC,GAAG;QAAAY,QAAA,EAAC;MAAQ;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CAAC,eACTR,OAAA,CAACU,SAAS;MAACC,MAAM,EAAE3B,WAAY;MAAC4B,OAAO,EAAEA,CAAA,KAAM3B,cAAc,CAAC,KAAK,CAAE;MAAC4B,QAAQ,EAAE1B;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9F,CAAC;AAEV,CAAC;AAACzB,EAAA,CA3BIF,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}