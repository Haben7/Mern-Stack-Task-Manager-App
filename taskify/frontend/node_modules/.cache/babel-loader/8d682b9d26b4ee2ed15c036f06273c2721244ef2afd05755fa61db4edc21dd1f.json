{"ast":null,"code":"var _jsxFileName = \"/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/taskList.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import Task from './task';\n// // import InputData from './inputData';\n// // import './tasklist.css';\n\n// // const TaskList = () => {\n// //   const data = [\n// //     { id: 1, title: 'test 1', description: ' laboris nisi ut aliquip ex ea commodo consequat. Duis aute irur laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate ', status: 'incompleted' },\n// //     { id: 2, title: 'Build penny juice app', description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n// //     { id: 3, title: 'Learn Python', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim ', status: 'incompleted' },\n// //     { id: 4, title: 'Learn React', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim v', status: 'incompleted' },\n// //     { id: 5, title: 'Build a Portfolio', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim a ullamco', status: 'incompleted' },\n// //       { id: 6, title: 'Learn Nodejs', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n\n// //   ];\n\n// //   const [isModalOpen, setIsModalOpen] = useState(false);\n\n// //   const handleAddTask = (newTask) => {\n// //     setTasks([...tasks, { ...newTask, id: tasks.length + 1, status: 'incompleted' }]);\n// //   };\n\n// //   const moveToTrash = (taskId) => {\n// //     setTasks(tasks.map(task =>\n// //       task.id === taskId ? { ...task, trashed: true } : task\n// //     ));\n// //   };\n\n// //   const filteredTasks = tasks.filter(task => !task.trashed);\n// //   return (\n// //    /* <div className=\"task-list\">\n// //       {tasks.map(task => (\n// //         <Task key={task.id} task={task} />\n// //       ))}*/\n// //         <div className=\"task-list\">\n// //         {filteredTasks.map(task => (\n// //           <Task key={task.id} task={task} onMoveToTrash={moveToTrash} />\n// //         ))}\n// //        <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n// //         <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n// //         <p id=\"p\">Add Task</p>\n// //       </button>\n// //       <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n// //     </div>\n// //   );\n// // };\n\n// // export default TaskList;\n// import React, { useState } from 'react';\n// import Task from './task';\n// import InputData from './inputData';\n// import './tasklist.css';\n\n// const TaskList = (data) => {\n//   // const data = [\n//   //   { id: 1, title: 'test 1', description: 'laboris nisi ut aliquip ex ea commodo consequat. Duis aute irur laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate', status: 'incompleted' },\n//   //   { id: 2, title: 'Build penny juice app', description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n//   //   { id: 3, title: 'Learn Python', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim', status: 'incompleted' },\n//   //   { id: 4, title: 'Learn React', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim v', status: 'incompleted' },\n//   //   { id: 5, title: 'Build a Portfolio', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim a ullamco', status: 'incompleted' },\n//   //   { id: 6, title: 'Learn Nodejs', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n//   // ];\n\n//   const [tasks, setTasks] = useState(data);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const handleAddTask = (newTask) => {\n//     setTasks([...tasks, { ...newTask, id: tasks.length + 1, status: 'incompleted' }]);\n//   };\n\n//   const moveToTrash = (taskId) => {\n//     setTasks(tasks.map(task =>\n//       task.id === taskId ? { ...task, trashed: true } : task\n//     ));\n//   };\n\n//   const filteredTasks = tasks.filter(task => !task.trashed);\n\n//   return (\n//     <>\n//     <div className=\"task-list\">\n//       {filteredTasks.map(task => (\n//         <Task key={task.id} task={task} onMoveToTrash={moveToTrash} />\n//       ))}\n//       <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n//         <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n//         <p id=\"p\">Add Task</p>\n//       </button>\n//       <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n//     </div>\n//      <div className=\"task-list\">\n//       {filteredTasks.map(task => (\n//         <Task \n//           key={task._id} \n//           task={task} \n//           onMoveToTrash={moveToTrash} \n//           onToggleImportant={toggleImportant}\n//           onToggleCompletion={toggleCompletion}\n//         />\n//       ))}\n//       <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n//         <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n//         <p id=\"p\">Add Task</p>\n//       </button>\n//       <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n//     </div>\n//     </>\n//   );\n// };\n\n// export default TaskList;\nimport React, { useState } from 'react';\nimport Task from './task';\nimport InputData from './inputData';\nimport './tasklist.css';\n\n// Define the TaskList component to accept `data` as a prop\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  data\n}) => {\n  _s();\n  const [tasks, setTasks] = useState(data);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleAddTask = newTask => {\n    setTasks([...tasks, {\n      ...newTask,\n      id: tasks.length + 1,\n      status: 'incompleted'\n    }]);\n  };\n  const moveToTrash = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      trashed: true\n    } : task));\n  };\n  const toggleImportant = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      important: !task.important\n    } : task));\n  };\n  const toggleCompletion = taskId => {\n    setTasks(tasks.map(task => task.id === taskId ? {\n      ...task,\n      complete: !task.complete\n    } : task));\n  };\n  const filteredTasks = tasks.filter(task => !task.trashed);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: [filteredTasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onMoveToTrash: moveToTrash,\n      onToggleImportant: toggleImportant,\n      onToggleCompletion: toggleCompletion\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"add\",\n      className: \"task-list\",\n      onClick: () => setIsModalOpen(true),\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        id: \"more\",\n        className: \"bi bi-plus-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"p\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(InputData, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onSubmit: handleAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"Ypb6pxbI2JqHdL2vFjNHBYxeSDs=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","Task","InputData","jsxDEV","_jsxDEV","TaskList","data","_s","tasks","setTasks","isModalOpen","setIsModalOpen","handleAddTask","newTask","id","length","status","moveToTrash","taskId","map","task","trashed","toggleImportant","important","toggleCompletion","complete","filteredTasks","filter","className","children","onMoveToTrash","onToggleImportant","onToggleCompletion","fileName","_jsxFileName","lineNumber","columnNumber","onClick","isOpen","onClose","onSubmit","_c","$RefreshReg$"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/taskList.js"],"sourcesContent":["// // import React, { useState } from 'react';\n// // import Task from './task';\n// // import InputData from './inputData';\n// // import './tasklist.css';\n\n\n// // const TaskList = () => {\n// //   const data = [\n// //     { id: 1, title: 'test 1', description: ' laboris nisi ut aliquip ex ea commodo consequat. Duis aute irur laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate ', status: 'incompleted' },\n// //     { id: 2, title: 'Build penny juice app', description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n// //     { id: 3, title: 'Learn Python', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim ', status: 'incompleted' },\n// //     { id: 4, title: 'Learn React', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim v', status: 'incompleted' },\n// //     { id: 5, title: 'Build a Portfolio', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim a ullamco', status: 'incompleted' },\n// //       { id: 6, title: 'Learn Nodejs', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n      \n      \n    \n// //   ];\n\n// //   const [isModalOpen, setIsModalOpen] = useState(false);\n\n// //   const handleAddTask = (newTask) => {\n// //     setTasks([...tasks, { ...newTask, id: tasks.length + 1, status: 'incompleted' }]);\n// //   };\n\n// //   const moveToTrash = (taskId) => {\n// //     setTasks(tasks.map(task =>\n// //       task.id === taskId ? { ...task, trashed: true } : task\n// //     ));\n// //   };\n\n// //   const filteredTasks = tasks.filter(task => !task.trashed);\n// //   return (\n// //    /* <div className=\"task-list\">\n// //       {tasks.map(task => (\n// //         <Task key={task.id} task={task} />\n// //       ))}*/\n// //         <div className=\"task-list\">\n// //         {filteredTasks.map(task => (\n// //           <Task key={task.id} task={task} onMoveToTrash={moveToTrash} />\n// //         ))}\n// //        <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n// //         <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n// //         <p id=\"p\">Add Task</p>\n// //       </button>\n// //       <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n// //     </div>\n// //   );\n// // };\n\n// // export default TaskList;\n// import React, { useState } from 'react';\n// import Task from './task';\n// import InputData from './inputData';\n// import './tasklist.css';\n\n// const TaskList = (data) => {\n//   // const data = [\n//   //   { id: 1, title: 'test 1', description: 'laboris nisi ut aliquip ex ea commodo consequat. Duis aute irur laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate', status: 'incompleted' },\n//   //   { id: 2, title: 'Build penny juice app', description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n//   //   { id: 3, title: 'Learn Python', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim', status: 'incompleted' },\n//   //   { id: 4, title: 'Learn React', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim v', status: 'incompleted' },\n//   //   { id: 5, title: 'Build a Portfolio', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim a ullamco', status: 'incompleted' },\n//   //   { id: 6, title: 'Learn Nodejs', description: 'consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad ', status: 'incompleted' },\n//   // ];\n\n//   const [tasks, setTasks] = useState(data);\n//   const [isModalOpen, setIsModalOpen] = useState(false);\n\n//   const handleAddTask = (newTask) => {\n//     setTasks([...tasks, { ...newTask, id: tasks.length + 1, status: 'incompleted' }]);\n//   };\n\n//   const moveToTrash = (taskId) => {\n//     setTasks(tasks.map(task =>\n//       task.id === taskId ? { ...task, trashed: true } : task\n//     ));\n//   };\n\n//   const filteredTasks = tasks.filter(task => !task.trashed);\n\n//   return (\n//     <>\n//     <div className=\"task-list\">\n//       {filteredTasks.map(task => (\n//         <Task key={task.id} task={task} onMoveToTrash={moveToTrash} />\n//       ))}\n//       <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n//         <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n//         <p id=\"p\">Add Task</p>\n//       </button>\n//       <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n//     </div>\n//      <div className=\"task-list\">\n//       {filteredTasks.map(task => (\n//         <Task \n//           key={task._id} \n//           task={task} \n//           onMoveToTrash={moveToTrash} \n//           onToggleImportant={toggleImportant}\n//           onToggleCompletion={toggleCompletion}\n//         />\n//       ))}\n//       <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n//         <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n//         <p id=\"p\">Add Task</p>\n//       </button>\n//       <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n//     </div>\n//     </>\n//   );\n// };\n\n// export default TaskList;\nimport React, { useState } from 'react';\nimport Task from './task';\nimport InputData from './inputData';\nimport './tasklist.css';\n\n// Define the TaskList component to accept `data` as a prop\nconst TaskList = ({ data }) => {\n  const [tasks, setTasks] = useState(data);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleAddTask = (newTask) => {\n    setTasks([...tasks, { ...newTask, id: tasks.length + 1, status: 'incompleted' }]);\n  };\n\n  const moveToTrash = (taskId) => {\n    setTasks(tasks.map(task =>\n      task.id === taskId ? { ...task, trashed: true } : task\n    ));\n  };\n\n  const toggleImportant = (taskId) => {\n    setTasks(tasks.map(task =>\n      task.id === taskId ? { ...task, important: !task.important } : task\n    ));\n  };\n\n  const toggleCompletion = (taskId) => {\n    setTasks(tasks.map(task =>\n      task.id === taskId ? { ...task, complete: !task.complete } : task\n    ));\n  };\n\n  const filteredTasks = tasks.filter(task => !task.trashed);\n\n  return (\n    <div className=\"task-list\">\n      {filteredTasks.map(task => (\n        <Task\n          key={task.id}\n          task={task}\n          onMoveToTrash={moveToTrash}\n          onToggleImportant={toggleImportant}\n          onToggleCompletion={toggleCompletion}\n        />\n      ))}\n      <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n        <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n        <p id=\"p\">Add Task</p>\n      </button>\n      <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}