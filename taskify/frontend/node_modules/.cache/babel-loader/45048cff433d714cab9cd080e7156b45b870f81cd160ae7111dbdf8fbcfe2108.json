{"ast":null,"code":"var _jsxFileName = \"/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport Header from \"./header\";\nimport Sidebar from \"./sidebar\";\nimport TaskList from \"./taskList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [Data, setData] = useState([]);\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/api/v2/get-all-tasks\", {\n          headers\n        });\n        setData(response.data.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        // Optionally set error state and display a message\n      }\n    };\n    fetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-body\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"xsxb+4jHutJ15CYluGxm3ovL3zM=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","Header","Sidebar","TaskList","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","Data","setData","useState","fetch","response","axios","get","headers","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/home.js"],"sourcesContent":["import React, {useEffect} from \"react\";\nimport Header from \"./header\";\nimport Sidebar from \"./sidebar\";\nimport TaskList from \"./taskList\";\n\nfunction Home(){\n  const [Data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:4000/api/v2/get-all-tasks\", { headers });\n        setData(response.data.data);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        // Optionally set error state and display a message\n      }\n    };\n    fetch();\n  }, []);\n  return(\n    <>\n     <Header />\n     <div className=\"app-body\">\n            <Sidebar />\n            <TaskList />\n          </div>\n    </>\n  )\n}\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAEpCZ,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,4CAA4C,EAAE;UAAEC;QAAQ,CAAC,CAAC;QAC3FN,OAAO,CAACG,QAAQ,CAACI,IAAI,CAACA,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5C;MACF;IACF,CAAC;IACDN,KAAK,CAAC,CAAC;EACT,CAAC,EAAE,EAAE,CAAC;EACN,oBACER,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACChB,OAAA,CAACJ,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVpB,OAAA;MAAKqB,SAAS,EAAC,UAAU;MAAAL,QAAA,gBAClBhB,OAAA,CAACH,OAAO;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACXpB,OAAA,CAACF,QAAQ;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC;EAAA,eACV,CAAC;AAEP;AAAChB,EAAA,CAxBQD,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AAyBb,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}