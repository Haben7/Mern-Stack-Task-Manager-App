{"ast":null,"code":"// import React, {useState} from 'react';\n// import './task.css';\n// const Task = ({ task, onMoveToTrash }) => {\n//   const [isToggled, setIsToggled] = useState(false);\n//   const handleToggle = () => {\n//     setIsToggled((prev) => !prev);\n//   }\n//   const [checked, setIsChecked] = useState(false)\n//   const handleCheck =() => {\n//     setIsChecked((prev) => !prev);\n//   }\n//   return (\n//     <div className=\"task\">\n//       <div className=\"task-content\">\n//         <h3>{task.title}</h3>\n//         <p>{task.description}</p>\n//       </div>\n//       <div className=\"task-buttons\">\n//         <button onClick={handleCheck}>\n//       {checked ? (\n//        <h6 id='co'>Completed </h6>\n//       ) : (\n//         <h6 id='inco'>incompleted</h6>\n//       )}</button>\n//         <button><i id='icon' className=\"bi bi-pencil\"></i></button>\n//         <button onClick={() => onMoveToTrash(task.id)}><i id=\"icon\" className=\"bi bi-trash\"></i></button>\n//         <button onClick={handleToggle}>\n//       {isToggled ? (\n//        <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i>\n//       ) : (\n//         <i id='icon' className=\"bi bi-star\"></i>\n//       )}\n//     </button>  \n//         </div>\n//     </div>\n//   );\n// };\n// export default Task;\nimport React,{useState}from'react';import'./task.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Task=_ref=>{let{task,onDelete}=_ref;const[isEditing,setIsEditing]=useState(false);const[title,setTitle]=useState(task.title);const[description,setDescription]=useState(task.desc);const[checked,setChecked]=useState(task.complete);const handleEditToggle=()=>{setIsEditing(!isEditing);};const handleEditTask=async()=>{try{const token=localStorage.getItem('token');const response=await fetch(`http://localhost:4000/api/v2/update-task/${task._id}`,{method:'PUT',headers:{'Content-Type':'application/json','Authorization':`Bearer ${token}`},body:JSON.stringify({title,desc:description})});if(response.ok){setIsEditing(false);}else{console.error('Failed to update the task');}}catch(error){console.error('Error updating task:',error);}};const handleCheck=async()=>{try{const token=localStorage.getItem('token');const response=await fetch(`http://localhost:4000/api/v2/update-complete-task/${task._id}`,{method:'PUT',headers:{'Authorization':`Bearer ${token}`}});if(response.ok){setChecked(!checked);}else{console.error('Failed to update task completion');}}catch(error){console.error('Error updating task completion:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"task\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"task-content\",children:isEditing?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:title,onChange:e=>setTitle(e.target.value),className:\"task-edit-input\"}),/*#__PURE__*/_jsx(\"textarea\",{value:description,onChange:e=>setDescription(e.target.value),className:\"task-edit-textarea\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEditTask,className:\"task-save-button\",children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEditToggle,className:\"task-cancel-button\",children:\"Cancel\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h3\",{children:task.title}),/*#__PURE__*/_jsx(\"p\",{children:task.description})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleCheck,children:checked?/*#__PURE__*/_jsx(\"h6\",{id:\"co\",children:\"Completed\"}):/*#__PURE__*/_jsx(\"h6\",{id:\"inco\",children:\"Incomplete\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEditToggle,children:/*#__PURE__*/_jsx(\"i\",{id:\"icon\",className:\"bi bi-pencil\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onDelete(task._id),children:/*#__PURE__*/_jsx(\"i\",{id:\"icon\",className:\"bi bi-trash\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{try{const token=localStorage.getItem('token');const response=await fetch(`http://localhost:4000/api/v2/update-imp-task/${task._id}`,{method:'PUT',headers:{'Authorization':`Bearer ${token}`}});if(response.ok){}else{console.error('Failed to update task importance');}}catch(error){console.error('Error updating task importance:',error);}},children:task.important?/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-star-fill\",style:{color:'yellow'}}):/*#__PURE__*/_jsx(\"i\",{id:\"icon\",className:\"bi bi-star\"})})]})]});};export default Task;","map":{"version":3,"names":["React","useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Task","_ref","task","onDelete","isEditing","setIsEditing","title","setTitle","description","setDescription","desc","checked","setChecked","complete","handleEditToggle","handleEditTask","token","localStorage","getItem","response","fetch","_id","method","headers","body","JSON","stringify","ok","console","error","handleCheck","className","children","type","value","onChange","e","target","onClick","id","important","style","color"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/task.js"],"sourcesContent":["// import React, {useState} from 'react';\n// import './task.css';\n\n// const Task = ({ task, onMoveToTrash }) => {\n//   const [isToggled, setIsToggled] = useState(false);\n\n//   const handleToggle = () => {\n//     setIsToggled((prev) => !prev);\n//   }\n\n//   const [checked, setIsChecked] = useState(false)\n\n//   const handleCheck =() => {\n//     setIsChecked((prev) => !prev);\n\n//   }\n//   return (\n//     <div className=\"task\">\n//       <div className=\"task-content\">\n//         <h3>{task.title}</h3>\n//         <p>{task.description}</p>\n//       </div>\n//       <div className=\"task-buttons\">\n       \n//         <button onClick={handleCheck}>\n//       {checked ? (\n//        <h6 id='co'>Completed </h6>\n\n//       ) : (\n//         <h6 id='inco'>incompleted</h6>\n//       )}</button>\n\n        \n//         <button><i id='icon' className=\"bi bi-pencil\"></i></button>\n       \n//         <button onClick={() => onMoveToTrash(task.id)}><i id=\"icon\" className=\"bi bi-trash\"></i></button>\n\n\n//         <button onClick={handleToggle}>\n//       {isToggled ? (\n//        <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i>\n\n//       ) : (\n//         <i id='icon' className=\"bi bi-star\"></i>\n//       )}\n//     </button>  \n//         </div>\n//     </div>\n//   );\n// };\n\n// export default Task;\nimport React, { useState } from 'react';\nimport './task.css';\n\nconst Task = ({ task, onDelete }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [title, setTitle] = useState(task.title);\n  const [description, setDescription] = useState(task.desc);\n  const [checked, setChecked] = useState(task.complete);\n\n  const handleEditToggle = () => {\n    setIsEditing(!isEditing);\n  };\n\n  const handleEditTask = async () => {\n    try {\n      const token = localStorage.getItem('token');\n\n      const response = await fetch(`http://localhost:4000/api/v2/update-task/${task._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n        },\n        body: JSON.stringify({ title, desc: description }),\n      });\n\n      if (response.ok) {\n        setIsEditing(false);\n      } else {\n        console.error('Failed to update the task');\n      }\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n\n  const handleCheck = async () => {\n    try {\n      const token = localStorage.getItem('token');\n\n      const response = await fetch(`http://localhost:4000/api/v2/update-complete-task/${task._id}`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n        },\n      });\n\n      if (response.ok) {\n        setChecked(!checked);\n      } else {\n        console.error('Failed to update task completion');\n      }\n    } catch (error) {\n      console.error('Error updating task completion:', error);\n    }\n  };\n\n  return (\n    <div className=\"task\">\n      <div className=\"task-content\">\n        {isEditing ? (\n          <>\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              className=\"task-edit-input\"\n            />\n            <textarea\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              className=\"task-edit-textarea\"\n            ></textarea>\n            <button onClick={handleEditTask} className=\"task-save-button\">\n              Save\n            </button>\n            <button onClick={handleEditToggle} className=\"task-cancel-button\">\n              Cancel\n            </button>\n          </>\n        ) : (\n          <>\n            <h3>{task.title}</h3>\n            <p>{task.description}</p>\n          </>\n        )}\n      </div>\n      <div className=\"task-buttons\">\n        <button onClick={handleCheck}>\n          {checked ? (\n            <h6 id='co'>Completed</h6>\n          ) : (\n            <h6 id='inco'>Incomplete</h6>\n          )}\n        </button>\n\n        <button onClick={handleEditToggle}>\n          <i id='icon' className=\"bi bi-pencil\"></i>\n        </button>\n\n        <button onClick={() => onDelete(task._id)}>\n          <i id=\"icon\" className=\"bi bi-trash\"></i>\n        </button>\n\n        <button onClick={async () => {\n          try {\n            const token = localStorage.getItem('token');\n\n            const response = await fetch(`http://localhost:4000/api/v2/update-imp-task/${task._id}`, {\n              method: 'PUT',\n              headers: {\n                'Authorization': `Bearer ${token}`,\n              },\n            });\n\n            if (response.ok) {\n            } else {\n              console.error('Failed to update task importance');\n            }\n          } catch (error) {\n            console.error('Error updating task importance:', error);\n          }\n        }}>\n          {task.important ? (\n            <i className=\"bi bi-star-fill\" style={{ color: 'yellow' }}></i>\n          ) : (\n            <i id='icon' className=\"bi bi-star\"></i>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Task;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}