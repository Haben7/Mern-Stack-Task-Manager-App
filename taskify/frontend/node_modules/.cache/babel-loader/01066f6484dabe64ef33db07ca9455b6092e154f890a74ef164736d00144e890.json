{"ast":null,"code":"// import React, { useEffect } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { authActions } from './store/auth';\n\n// import Home from './components/home';\n// import './App.css';\n// import Important from './components/important';\n// import Trash from './components/Trash';\n// import Incompleted from './components/incompleted';\n// import Completed from './components/completed';\n// import SignUp from './components/signUp';\n// import SignIn from './components/signIn';\n\n// function App() {\n//   const navigate = useNavigate();\n//   const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     if (localStorage.getItem(\"id\") && localStorage.getItem(\"token\")) {\n//       dispatch(authActions.login());\n//     } else if (!isLoggedIn) {\n//       navigate(\"/signUp\");\n//     }\n//   }, [isLoggedIn, navigate, dispatch]); // Always use navigate inside useEffect\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<Home />} />\n//       <Route path=\"/important\" element={<Important />} />\n//       <Route path=\"/completed\" element={<Completed />} />\n//       <Route path=\"/incompleted\" element={<Incompleted />} />\n//       <Route path=\"/Trash\" element={<Trash />} />\n//       <Route path=\"/signUp\" element={<SignUp />} />\n//       <Route path=\"/signIn\" element={<SignIn />} />\n//     </Routes>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/home/netsi/omishtu_joy/Day_6/taskify/frontend/src/App.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { authActions } from './store/auth';\n\n// import Home from './components/home';\n// import './App.css';\n// import Important from './components/important';\n// import Trash from './components/Trash';\n// import Incompleted from './components/incompleted';\n// import Completed from './components/completed';\n// import SignUp from './components/signUp';\n// import SignIn from './components/signIn';\n\n// function App() {\n//   const navigate = useNavigate();\n//   const isLoggedIn = useSelector((state) => state.auth.isLoggedIn);\n//   const dispatch = useDispatch();\n\n//   useEffect(() => {\n//     if (localStorage.getItem(\"id\") && localStorage.getItem(\"token\")) {\n//       dispatch(authActions.login());\n//     } else if (!isLoggedIn) {\n//       navigate(\"/signUp\");\n//     }\n//   }, [isLoggedIn, navigate, dispatch]); // Always use navigate inside useEffect\n\n//   return (\n//     <Routes>\n//       <Route path=\"/\" element={<Home />} />\n//       <Route path=\"/important\" element={<Important />} />\n//       <Route path=\"/completed\" element={<Completed />} />\n//       <Route path=\"/incompleted\" element={<Incompleted />} />\n//       <Route path=\"/Trash\" element={<Trash />} />\n//       <Route path=\"/signUp\" element={<SignUp />} />\n//       <Route path=\"/signIn\" element={<SignIn />} />\n//     </Routes>\n//   );\n// }\n\n// export default App;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}