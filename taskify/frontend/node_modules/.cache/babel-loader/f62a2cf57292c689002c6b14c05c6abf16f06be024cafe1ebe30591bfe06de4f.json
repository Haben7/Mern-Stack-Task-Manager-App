{"ast":null,"code":"var _jsxFileName = \"/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/updateProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './styles/updateProfile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UpdateProfile = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n  const handleUpdatePassword = async e => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token'); // Ensure token is available\n      if (!token) {\n        setError('User is not authenticated.');\n        return;\n      }\n      const response = await axios.put('http://localhost:4000/api/v1/update-password', {\n        username,\n        email,\n        oldPassword,\n        newPassword\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}` // Token sent for authentication\n        }\n      });\n      if (response.status === 200) {\n        setSuccess('Password updated successfully');\n        setError('');\n        navigate('/home');\n      }\n    } catch (error) {\n      setError('Failed to update password. Please try again.');\n      setSuccess('');\n    }\n  };\n  const handleClose = () => {\n    navigate('/home');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpdatePassword,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlayy\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-button\",\n            onClick: handleClose,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            id: \"newTask\",\n            children: \"Update Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error-message\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 23\n          }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"success-message\",\n            children: success\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username...\",\n            value: username,\n            onChange: e => setUsername(e.target.value),\n            className: \"modal-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"email@example.com\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            className: \"modal-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Old password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Old password...\",\n            value: oldPassword,\n            onChange: e => setOldPassword(e.target.value),\n            className: \"modal-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"New Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"New password...\",\n            value: newPassword,\n            onChange: e => setNewPassword(e.target.value),\n            className: \"modal-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"submit-button\",\n            children: \"Save Changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(UpdateProfile, \"Ftdq2Y46En8LYJLrOCAaWytg7x8=\", false, function () {\n  return [useNavigate];\n});\n_c = UpdateProfile;\nexport default UpdateProfile;\n\n// import React, { useState } from 'react';\n// import axios from 'axios'; \n// import { useNavigate } from 'react-router-dom'; \n//  import './updateProfile.css'; // Ensure the path is correct\n\n// const UpdatePassword = () => {\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [oldPassword, setOldPassword] = useState('');\n//   const [newPassword, setNewPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleUpdatePassword = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token'); \n//       const response = await axios.put('http://localhost:4000/api/v1/update-password', { \n//         username,\n//         email,\n//         oldPassword,\n//         newPassword,\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       });\n\n//       if (response.status === 200) {\n//         setSuccess('Password updated successfully');\n//         setError('');\n//         navigate('/home');\n//       }\n//     } catch (error) {\n//       console.error('Error updating password:', error);\n//       setError('Failed to update password. Please try again.');\n//       setSuccess('');\n//     }\n//   };\n\n//   const handleClose = () => {\n//     navigate('/home'); \n//   };\n\n//   return (\n//     <div className=\"update-password-container\">\n//       <form onSubmit={handleUpdatePassword}>\n//         <h2>Update Password</h2>\n//         {error && <p className=\"error-message\">{error}</p>}\n//         {success && <p className=\"success-message\">{success}</p>}\n//         <label>Username:</label>\n//         <input\n//           type=\"text\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           placeholder=\"Username\"\n//         />\n//         <label>Email:</label>\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           placeholder=\"Email\"\n//         />\n//         <label>Old Password:</label>\n//         <input\n//           type=\"password\"\n//           value={oldPassword}\n//           onChange={(e) => setOldPassword(e.target.value)}\n//           placeholder=\"Old Password\"\n//         />\n//         <label>New Password:</label>\n//         <input\n//           type=\"password\"\n//           value={newPassword}\n//           onChange={(e) => setNewPassword(e.target.value)}\n//           placeholder=\"New Password\"\n//         />\n//         <button type=\"submit\">Update Password</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UpdatePassword;\nvar _c;\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","UpdateProfile","_s","username","setUsername","email","setEmail","oldPassword","setOldPassword","newPassword","setNewPassword","error","setError","success","setSuccess","navigate","handleUpdatePassword","e","preventDefault","token","localStorage","getItem","response","put","headers","Authorization","status","handleClose","children","onSubmit","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","id","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/updateProfile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; \nimport './styles/updateProfile.css'; \n\nconst UpdateProfile = () => {\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [oldPassword, setOldPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n\n  const handleUpdatePassword = async (e) => {\n    e.preventDefault();\n    try {\n      const token = localStorage.getItem('token'); // Ensure token is available\n      if (!token) {\n        setError('User is not authenticated.');\n        return;\n      }\n\n      const response = await axios.put('http://localhost:4000/api/v1/update-password', {\n        username,\n        email,\n        oldPassword,\n        newPassword,\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`, // Token sent for authentication\n        },\n      });\n\n      if (response.status === 200) {\n        setSuccess('Password updated successfully');\n        setError('');\n        navigate('/home');\n      }\n    } catch (error) {\n      setError('Failed to update password. Please try again.');\n      setSuccess('');\n    }\n  };\n\n  const handleClose = () => {\n    navigate('/home'); \n  };\n\n  return (\n    <>\n      <form onSubmit={handleUpdatePassword}>\n        <div className=\"modal-overlayy\">\n          <div className=\"modal-content\">\n            <button className=\"close-button\" onClick={handleClose}>\n              &times;\n            </button>\n            <h2 id='newTask'>Update Profile</h2>\n            {error && <p className=\"error-message\">{error}</p>}\n            {success && <p className=\"success-message\">{success}</p>}\n            <label>Username:</label>\n            <input\n              type=\"text\"\n              placeholder=\"Username...\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              className=\"modal-input\"\n            />\n            <label>Email address:</label>\n            <input\n              type=\"email\"\n              placeholder=\"email@example.com\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"modal-input\"\n            />\n            <label>Old password:</label>\n            <input\n              type=\"password\"\n              placeholder=\"Old password...\"\n              value={oldPassword}\n              onChange={(e) => setOldPassword(e.target.value)}\n              className=\"modal-input\"\n            />\n            <label>New Password:</label>\n            <input\n              type=\"password\"\n              placeholder=\"New password...\"\n              value={newPassword}\n              onChange={(e) => setNewPassword(e.target.value)}\n              className=\"modal-input\"\n            />\n            <button type='submit' className=\"submit-button\">\n              Save Changes\n            </button>\n          </div>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default UpdateProfile;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useState } from 'react';\n// import axios from 'axios'; \n// import { useNavigate } from 'react-router-dom'; \n//  import './updateProfile.css'; // Ensure the path is correct\n\n// const UpdatePassword = () => {\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [oldPassword, setOldPassword] = useState('');\n//   const [newPassword, setNewPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleUpdatePassword = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token'); \n//       const response = await axios.put('http://localhost:4000/api/v1/update-password', { \n//         username,\n//         email,\n//         oldPassword,\n//         newPassword,\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       });\n\n//       if (response.status === 200) {\n//         setSuccess('Password updated successfully');\n//         setError('');\n//         navigate('/home');\n//       }\n//     } catch (error) {\n//       console.error('Error updating password:', error);\n//       setError('Failed to update password. Please try again.');\n//       setSuccess('');\n//     }\n//   };\n\n//   const handleClose = () => {\n//     navigate('/home'); \n//   };\n\n//   return (\n//     <div className=\"update-password-container\">\n//       <form onSubmit={handleUpdatePassword}>\n//         <h2>Update Password</h2>\n//         {error && <p className=\"error-message\">{error}</p>}\n//         {success && <p className=\"success-message\">{success}</p>}\n//         <label>Username:</label>\n//         <input\n//           type=\"text\"\n//           value={username}\n//           onChange={(e) => setUsername(e.target.value)}\n//           placeholder=\"Username\"\n//         />\n//         <label>Email:</label>\n//         <input\n//           type=\"email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           placeholder=\"Email\"\n//         />\n//         <label>Old Password:</label>\n//         <input\n//           type=\"password\"\n//           value={oldPassword}\n//           onChange={(e) => setOldPassword(e.target.value)}\n//           placeholder=\"Old Password\"\n//         />\n//         <label>New Password:</label>\n//         <input\n//           type=\"password\"\n//           value={newPassword}\n//           onChange={(e) => setNewPassword(e.target.value)}\n//           placeholder=\"New Password\"\n//         />\n//         <button type=\"submit\">Update Password</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default UpdatePassword;\n"],"mappings":"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AAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC,gBACP,CAAC;AAEP,CAAC;AAACjC,EAAA,CA/FID,aAAa;EAAA,QAOAN,WAAW;AAAA;AAAA+C,EAAA,GAPxBzC,aAAa;AAiGnB,eAAeA,aAAa;;AAqC5B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}