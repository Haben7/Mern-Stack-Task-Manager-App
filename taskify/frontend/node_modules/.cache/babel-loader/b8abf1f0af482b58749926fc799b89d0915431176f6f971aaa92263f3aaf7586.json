{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Updated import\n// import './styles/updateProfile.css'; // Ensure the path is correct\n// import axios from 'axios'; \n\n// const UpdateProfile = () => {\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [oldPassword, setOldPassword] = useState('');\n//   const [newPassword, setNewPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleUpdatePassword = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token'); \n//       const response = await axios.put('http://localhost:4000/api/v1/update-password', { \n//         username,\n//         email,\n//         oldPassword,\n//         newPassword,\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       });\n\n//       if (response.status === 200) {\n//         setSuccess('Password updated successfully');\n//         setError('');\n//         navigate('/home');\n//       }\n//     } catch (error) {\n//       console.error('Error updating password:', error);\n//       setError('Failed to update password. Please try again.');\n//       setSuccess('');\n//     }\n//   };\n\n//   const handleClose = () => {\n//     navigate('/home'); \n//   };\n\n//   return (\n//     <>\n//       <form onSubmit={handleUpdatePassword}>\n//         <div className=\"modal-overlayy\">\n//           <div className=\"modal-content\">\n//             <button className=\"close-button\" onClick={handleClose}>\n//               &times;\n//             </button>\n//             <h2 id='newTask'>Update Profile</h2>\n//             {error && <p className=\"error-message\">{error}</p>}\n//             {success && <p className=\"success-message\">{success}</p>}\n//             <label>Username:</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Username...\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               className=\"modal-input\"\n//             />\n//             <label>Email address:</label>\n//             <input\n//               type=\"email\"\n//               placeholder=\"email@example.com\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               className=\"modal-input\"\n//             />\n//             <label>Old password:</label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Old password...\"\n//               value={oldPassword}\n//               onChange={(e) => setOldPassword(e.target.value)}\n//               className=\"modal-input\"\n//             />\n//             <label>New Password:</label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"New password...\"\n//               value={newPassword}\n//               onChange={(e) => setNewPassword(e.target.value)}\n//               className=\"modal-input\"\n//             />\n//             <button type='submit' className=\"submit-button\">\n//               Save Changes\n//             </button>\n//           </div>\n//         </div>\n//       </form>\n//     </>\n//   );\n// };\n\n// export default UpdateProfile;\n\n// // import React, { useState } from 'react';\n// // import axios from 'axios'; \n// // import { useNavigate } from 'react-router-dom'; \n// //  import './updateProfile.css'; // Ensure the path is correct\n\n// // const UpdatePassword = () => {\n// //   const [username, setUsername] = useState('');\n// //   const [email, setEmail] = useState('');\n// //   const [oldPassword, setOldPassword] = useState('');\n// //   const [newPassword, setNewPassword] = useState('');\n// //   const [error, setError] = useState('');\n// //   const [success, setSuccess] = useState('');\n// //   const navigate = useNavigate();\n\n// //   const handleUpdatePassword = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const token = localStorage.getItem('token'); \n// //       const response = await axios.put('http://localhost:4000/api/v1/update-password', { \n// //         username,\n// //         email,\n// //         oldPassword,\n// //         newPassword,\n// //       }, {\n// //         headers: {\n// //           Authorization: `Bearer ${token}`\n// //         }\n// //       });\n\n// //       if (response.status === 200) {\n// //         setSuccess('Password updated successfully');\n// //         setError('');\n// //         navigate('/home');\n// //       }\n// //     } catch (error) {\n// //       console.error('Error updating password:', error);\n// //       setError('Failed to update password. Please try again.');\n// //       setSuccess('');\n// //     }\n// //   };\n\n// //   const handleClose = () => {\n// //     navigate('/home'); \n// //   };\n\n// //   return (\n// //     <div className=\"update-password-container\">\n// //       <form onSubmit={handleUpdatePassword}>\n// //         <h2>Update Password</h2>\n// //         {error && <p className=\"error-message\">{error}</p>}\n// //         {success && <p className=\"success-message\">{success}</p>}\n// //         <label>Username:</label>\n// //         <input\n// //           type=\"text\"\n// //           value={username}\n// //           onChange={(e) => setUsername(e.target.value)}\n// //           placeholder=\"Username\"\n// //         />\n// //         <label>Email:</label>\n// //         <input\n// //           type=\"email\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //           placeholder=\"Email\"\n// //         />\n// //         <label>Old Password:</label>\n// //         <input\n// //           type=\"password\"\n// //           value={oldPassword}\n// //           onChange={(e) => setOldPassword(e.target.value)}\n// //           placeholder=\"Old Password\"\n// //         />\n// //         <label>New Password:</label>\n// //         <input\n// //           type=\"password\"\n// //           value={newPassword}\n// //           onChange={(e) => setNewPassword(e.target.value)}\n// //           placeholder=\"New Password\"\n// //         />\n// //         <button type=\"submit\">Update Password</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default UpdatePassword;","map":{"version":3,"names":[],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/updateProfile.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Updated import\n// import './styles/updateProfile.css'; // Ensure the path is correct\n// import axios from 'axios'; \n\n// const UpdateProfile = () => {\n//   const [username, setUsername] = useState('');\n//   const [email, setEmail] = useState('');\n//   const [oldPassword, setOldPassword] = useState('');\n//   const [newPassword, setNewPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const [success, setSuccess] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleUpdatePassword = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const token = localStorage.getItem('token'); \n//       const response = await axios.put('http://localhost:4000/api/v1/update-password', { \n//         username,\n//         email,\n//         oldPassword,\n//         newPassword,\n//       }, {\n//         headers: {\n//           Authorization: `Bearer ${token}`\n//         }\n//       });\n\n//       if (response.status === 200) {\n//         setSuccess('Password updated successfully');\n//         setError('');\n//         navigate('/home');\n//       }\n//     } catch (error) {\n//       console.error('Error updating password:', error);\n//       setError('Failed to update password. Please try again.');\n//       setSuccess('');\n//     }\n//   };\n\n//   const handleClose = () => {\n//     navigate('/home'); \n//   };\n\n//   return (\n//     <>\n//       <form onSubmit={handleUpdatePassword}>\n//         <div className=\"modal-overlayy\">\n//           <div className=\"modal-content\">\n//             <button className=\"close-button\" onClick={handleClose}>\n//               &times;\n//             </button>\n//             <h2 id='newTask'>Update Profile</h2>\n//             {error && <p className=\"error-message\">{error}</p>}\n//             {success && <p className=\"success-message\">{success}</p>}\n//             <label>Username:</label>\n//             <input\n//               type=\"text\"\n//               placeholder=\"Username...\"\n//               value={username}\n//               onChange={(e) => setUsername(e.target.value)}\n//               className=\"modal-input\"\n//             />\n//             <label>Email address:</label>\n//             <input\n//               type=\"email\"\n//               placeholder=\"email@example.com\"\n//               value={email}\n//               onChange={(e) => setEmail(e.target.value)}\n//               className=\"modal-input\"\n//             />\n//             <label>Old password:</label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"Old password...\"\n//               value={oldPassword}\n//               onChange={(e) => setOldPassword(e.target.value)}\n//               className=\"modal-input\"\n//             />\n//             <label>New Password:</label>\n//             <input\n//               type=\"password\"\n//               placeholder=\"New password...\"\n//               value={newPassword}\n//               onChange={(e) => setNewPassword(e.target.value)}\n//               className=\"modal-input\"\n//             />\n//             <button type='submit' className=\"submit-button\">\n//               Save Changes\n//             </button>\n//           </div>\n//         </div>\n//       </form>\n//     </>\n//   );\n// };\n\n// export default UpdateProfile;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // import React, { useState } from 'react';\n// // import axios from 'axios'; \n// // import { useNavigate } from 'react-router-dom'; \n// //  import './updateProfile.css'; // Ensure the path is correct\n\n// // const UpdatePassword = () => {\n// //   const [username, setUsername] = useState('');\n// //   const [email, setEmail] = useState('');\n// //   const [oldPassword, setOldPassword] = useState('');\n// //   const [newPassword, setNewPassword] = useState('');\n// //   const [error, setError] = useState('');\n// //   const [success, setSuccess] = useState('');\n// //   const navigate = useNavigate();\n\n// //   const handleUpdatePassword = async (e) => {\n// //     e.preventDefault();\n// //     try {\n// //       const token = localStorage.getItem('token'); \n// //       const response = await axios.put('http://localhost:4000/api/v1/update-password', { \n// //         username,\n// //         email,\n// //         oldPassword,\n// //         newPassword,\n// //       }, {\n// //         headers: {\n// //           Authorization: `Bearer ${token}`\n// //         }\n// //       });\n\n// //       if (response.status === 200) {\n// //         setSuccess('Password updated successfully');\n// //         setError('');\n// //         navigate('/home');\n// //       }\n// //     } catch (error) {\n// //       console.error('Error updating password:', error);\n// //       setError('Failed to update password. Please try again.');\n// //       setSuccess('');\n// //     }\n// //   };\n\n// //   const handleClose = () => {\n// //     navigate('/home'); \n// //   };\n\n// //   return (\n// //     <div className=\"update-password-container\">\n// //       <form onSubmit={handleUpdatePassword}>\n// //         <h2>Update Password</h2>\n// //         {error && <p className=\"error-message\">{error}</p>}\n// //         {success && <p className=\"success-message\">{success}</p>}\n// //         <label>Username:</label>\n// //         <input\n// //           type=\"text\"\n// //           value={username}\n// //           onChange={(e) => setUsername(e.target.value)}\n// //           placeholder=\"Username\"\n// //         />\n// //         <label>Email:</label>\n// //         <input\n// //           type=\"email\"\n// //           value={email}\n// //           onChange={(e) => setEmail(e.target.value)}\n// //           placeholder=\"Email\"\n// //         />\n// //         <label>Old Password:</label>\n// //         <input\n// //           type=\"password\"\n// //           value={oldPassword}\n// //           onChange={(e) => setOldPassword(e.target.value)}\n// //           placeholder=\"Old Password\"\n// //         />\n// //         <label>New Password:</label>\n// //         <input\n// //           type=\"password\"\n// //           value={newPassword}\n// //           onChange={(e) => setNewPassword(e.target.value)}\n// //           placeholder=\"New Password\"\n// //         />\n// //         <button type=\"submit\">Update Password</button>\n// //       </form>\n// //     </div>\n// //   );\n// // };\n\n// // export default UpdatePassword;\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAqCA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}