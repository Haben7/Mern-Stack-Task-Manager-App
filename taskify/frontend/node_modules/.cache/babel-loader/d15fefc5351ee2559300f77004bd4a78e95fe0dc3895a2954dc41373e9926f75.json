{"ast":null,"code":"var _jsxFileName = \"/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/home.js\";\n// import React, { useState, useEffect } from 'react';\n// import Header from \"./header\";\n// import Sidebar from \"./sidebar\";\n// import TaskList from \"./taskList\";\n// import axios from 'axios';\n// import InputData from './inputData';\n// function Home(){\n// //   const [tasks, setTasks] = useState([]);\n// //   const [Data, setData] = useState();\n// //   const [isModalOpen, setIsModalOpen] = useState(false);\n// //   const headers = {\n// //     id: localStorage.getItem(\"id\"),\n// //     authorization: `Bearer ${localStorage.getItem(\"token\")}`\n// //   };\n\n// //   // Fetch tasks from backend\n// //   useEffect(() => {\n// //     const fetch = async () => {\n// //       try {\n// //         // const userId = localStorage.getItem('id'); // Assuming the user ID is stored in localStorage\n// //         // const token = localStorage.getItem('token'); // Assuming token is stored in localStorage\n// //         const response = await axios.get('http://localhost:4000/api/v2/get-all-tasks', {\n// //           // headers: { id: userId, Authorization: `Bearer ${token}` }\n// //         });\n// //         setData(response.data.data);\n// //       } catch (error) {\n// //         console.error('Error fetching tasks:', error);\n// //       }\n// //     };\n\n// //     fetch();\n// //   });\n// // Data && console.log(Data.tasks);\n// //   // Add a new task by sending it to the backend\n// //   const handleAddTask = async (newTask) => {\n// //     try {\n// //       setTasks([...tasks, newTask]); // Add the new task to the state\n// //     } catch (error) {\n// //       console.error('Error adding task:', error);\n// //     }\n// //   };\n\n// //   // Delete a task by sending a delete request to the backend\n// //   const moveToTrash = async (taskId) => {\n// //     try {\n// //       const userId = localStorage.getItem('id');\n// //       const token = localStorage.getItem('token');\n// //       await axios.delete(`/api/v2/delete-task/${taskId}`, {\n// //         headers: { id: userId, Authorization: `Bearer ${token}` }\n// //       });\n// //       setTasks(tasks.filter(task => task._id !== taskId)); // Remove the task from state\n// //     } catch (error) {\n// //       console.error('Error deleting task:', error);\n// //     }\n// //   };\n\n// //   // Update the task as important by sending a put request to the backend\n// //   const toggleImportant = async (taskId) => {\n// //     try {\n// //       const response = await axios.put(`/api/v2/update-imp-task/${taskId}`, {}, {\n// //         headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n// //       });\n// //       setTasks(tasks.map(task =>\n// //         task._id === taskId ? { ...task, important: !task.important } : task\n// //       ));\n// //     } catch (error) {\n// //       console.error('Error toggling task importance:', error);\n// //     }\n// //   };\n\n// //   // Update task completion status\n// //   const toggleCompletion = async (taskId) => {\n// //     try {\n// //       const response = await axios.put(`/api/v2/update-complete-task/${taskId}`, {}, {\n// //         headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n// //       });\n// //       setTasks(tasks.map(task =>\n// //         task._id === taskId ? { ...task, completed: !task.completed } : task\n// //       ));\n// //     } catch (error) {\n// //       console.error('Error toggling task completion:', error);\n// //     }\n// //   };\n\n// //   const filteredTasks = tasks.filter(task => !task.trashed);\n//   return(\n//     <>\n//      <Header />\n//      <div className=\"app-body\">\n//             <Sidebar />\n//            {Data && <TaskList data = {Data.tasks}/>}\n//           </div>\n\n//     {/* <div className=\"task-list\">\n//       {filteredTasks.map(task => (\n//         <Task \n//           key={task._id} \n//           task={task} \n//           onMoveToTrash={moveToTrash} \n//           onToggleImportant={toggleImportant}\n//           onToggleCompletion={toggleCompletion}\n//         />\n//       ))}\n//       <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n//         <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n//         <p id=\"p\">Add Task</p>\n//       </button>\n//       <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n//     </div> */}\n\n//     </>\n//   )\n// }\n// export default Home;\nimport React from \"react\";\nimport Header from \"./header\";\nimport Sidebar from \"./sidebar\";\nimport TaskList from \"./taskList\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"sidebar\",\n      children: [\"            \", /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskList\",\n      children: /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 18\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n}\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Header","Sidebar","TaskList","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/home/netsi/omishtu_joy/Day_4/taskify/frontend/src/components/home.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import Header from \"./header\";\n// import Sidebar from \"./sidebar\";\n// import TaskList from \"./taskList\";\n// import axios from 'axios';\n// import InputData from './inputData';\n// function Home(){\n// //   const [tasks, setTasks] = useState([]);\n// //   const [Data, setData] = useState();\n// //   const [isModalOpen, setIsModalOpen] = useState(false);\n// //   const headers = {\n// //     id: localStorage.getItem(\"id\"),\n// //     authorization: `Bearer ${localStorage.getItem(\"token\")}`\n// //   };\n\n// //   // Fetch tasks from backend\n// //   useEffect(() => {\n// //     const fetch = async () => {\n// //       try {\n// //         // const userId = localStorage.getItem('id'); // Assuming the user ID is stored in localStorage\n// //         // const token = localStorage.getItem('token'); // Assuming token is stored in localStorage\n// //         const response = await axios.get('http://localhost:4000/api/v2/get-all-tasks', {\n// //           // headers: { id: userId, Authorization: `Bearer ${token}` }\n// //         });\n// //         setData(response.data.data);\n// //       } catch (error) {\n// //         console.error('Error fetching tasks:', error);\n// //       }\n// //     };\n\n// //     fetch();\n// //   });\n// // Data && console.log(Data.tasks);\n// //   // Add a new task by sending it to the backend\n// //   const handleAddTask = async (newTask) => {\n// //     try {\n// //       setTasks([...tasks, newTask]); // Add the new task to the state\n// //     } catch (error) {\n// //       console.error('Error adding task:', error);\n// //     }\n// //   };\n\n// //   // Delete a task by sending a delete request to the backend\n// //   const moveToTrash = async (taskId) => {\n// //     try {\n// //       const userId = localStorage.getItem('id');\n// //       const token = localStorage.getItem('token');\n// //       await axios.delete(`/api/v2/delete-task/${taskId}`, {\n// //         headers: { id: userId, Authorization: `Bearer ${token}` }\n// //       });\n// //       setTasks(tasks.filter(task => task._id !== taskId)); // Remove the task from state\n// //     } catch (error) {\n// //       console.error('Error deleting task:', error);\n// //     }\n// //   };\n\n// //   // Update the task as important by sending a put request to the backend\n// //   const toggleImportant = async (taskId) => {\n// //     try {\n// //       const response = await axios.put(`/api/v2/update-imp-task/${taskId}`, {}, {\n// //         headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n// //       });\n// //       setTasks(tasks.map(task =>\n// //         task._id === taskId ? { ...task, important: !task.important } : task\n// //       ));\n// //     } catch (error) {\n// //       console.error('Error toggling task importance:', error);\n// //     }\n// //   };\n\n// //   // Update task completion status\n// //   const toggleCompletion = async (taskId) => {\n// //     try {\n// //       const response = await axios.put(`/api/v2/update-complete-task/${taskId}`, {}, {\n// //         headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n// //       });\n// //       setTasks(tasks.map(task =>\n// //         task._id === taskId ? { ...task, completed: !task.completed } : task\n// //       ));\n// //     } catch (error) {\n// //       console.error('Error toggling task completion:', error);\n// //     }\n// //   };\n\n// //   const filteredTasks = tasks.filter(task => !task.trashed);\n//   return(\n//     <>\n//      <Header />\n//      <div className=\"app-body\">\n//             <Sidebar />\n//            {Data && <TaskList data = {Data.tasks}/>}\n//           </div>\n \n  \n  \n//     {/* <div className=\"task-list\">\n//       {filteredTasks.map(task => (\n//         <Task \n//           key={task._id} \n//           task={task} \n//           onMoveToTrash={moveToTrash} \n//           onToggleImportant={toggleImportant}\n//           onToggleCompletion={toggleCompletion}\n//         />\n//       ))}\n//       <button id=\"add\" className=\"task-list\" onClick={() => setIsModalOpen(true)}>\n//         <i id=\"more\" className=\"bi bi-plus-circle\"></i>\n//         <p id=\"p\">Add Task</p>\n//       </button>\n//       <InputData isOpen={isModalOpen} onClose={() => setIsModalOpen(false)} onSubmit={handleAddTask} />\n//     </div> */}\n  \n\n\n//     </>\n//   )\n// }\n// export default Home;\nimport React from \"react\";\nimport Header from \"./header\";\nimport Sidebar from \"./sidebar\";\nimport TaskList from \"./taskList\";\n\nfunction Home(){\n  return(\n    <>\n     <Header />\n     {/* <div className=\"app-body\"> */}\n     <nav className=\"sidebar\">            <Sidebar />\n     </nav>\n     <div className=\"taskList\"> \n                 <TaskList />\n     </div>\n          {/* </div> */}\n    </>\n  )\n}\nexport default Home;"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElC,SAASC,IAAIA,CAAA,EAAE;EACb,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,gBACCJ,OAAA,CAACJ,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEVR,OAAA;MAAKS,SAAS,EAAC,SAAS;MAAAL,QAAA,GAAC,cAAY,eAAAJ,OAAA,CAACH,OAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACNR,OAAA;MAAKS,SAAS,EAAC,UAAU;MAAAL,QAAA,eACbJ,OAAA,CAACF,QAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA,eAEL,CAAC;AAEP;AAACE,EAAA,GAbQP,IAAI;AAcb,eAAeA,IAAI;AAAC,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}